{"version":3,"file":"js/app.6d9109a8.js","mappings":"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","sources":["webpack://frontend/./src/App.vue","webpack://frontend/./src/App.vue?0e40","webpack://frontend/./src/views/HomeView.vue","webpack://frontend/src/views/HomeView.vue","webpack://frontend/./src/views/HomeView.vue?5167","webpack://frontend/./src/views/HomeView.vue?aae2","webpack://frontend/./src/views/RoomView.vue","webpack://frontend/src/views/RoomView.vue","webpack://frontend/./src/views/RoomView.vue?0bf1","webpack://frontend/./src/views/RoomView.vue?d5e8","webpack://frontend/./src/router/index.js","webpack://frontend/./src/store/index.js","webpack://frontend/./src/main.js","webpack://frontend/webpack/bootstrap","webpack://frontend/webpack/runtime/chunk loaded","webpack://frontend/webpack/runtime/compat get default export","webpack://frontend/webpack/runtime/define property getters","webpack://frontend/webpack/runtime/global","webpack://frontend/webpack/runtime/hasOwnProperty shorthand","webpack://frontend/webpack/runtime/make namespace object","webpack://frontend/webpack/runtime/jsonp chunk loading","webpack://frontend/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=4dcef7dc\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&id=4dcef7dc&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"home\"},[_c('div',{staticClass:\"container\"},[_c('h1',{staticClass:\"title\"},[_vm._v(\"Quick Share\")]),_c('div',{staticClass:\"room-controls\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.roomCode),expression:\"roomCode\"}],attrs:{\"placeholder\":\"방 코드 입력 (6자리)\",\"maxlength\":\"6\",\"pattern\":\"\\\\d*\"},domProps:{\"value\":(_vm.roomCode)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.roomCode=$event.target.value},_vm.validateInput]}})]),_c('div',{staticClass:\"button-group\"},[_c('button',{attrs:{\"disabled\":_vm.roomCode && !_vm.isValidCode},on:{\"click\":_vm.createRoom}},[_vm._v(\" \"+_vm._s(_vm.roomCode ? '새 방 만들기' : '자동 코드로 방 만들기')+\" \")])])]),_c('div',{staticClass:\"room-join\"},[_c('h2',{staticClass:\"section-title\"},[_vm._v(\"기존 방 들어가기\")]),_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.joinRoomCode),expression:\"joinRoomCode\"}],attrs:{\"placeholder\":\"참여할 방 코드 입력\",\"maxlength\":\"6\",\"pattern\":\"\\\\d*\"},domProps:{\"value\":(_vm.joinRoomCode)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.joinRoomCode=$event.target.value},_vm.validateJoinInput]}}),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.joinUserName),expression:\"joinUserName\"}],attrs:{\"placeholder\":\"이름 입력\",\"maxlength\":\"20\"},domProps:{\"value\":(_vm.joinUserName)},on:{\"input\":function($event){if($event.target.composing)return;_vm.joinUserName=$event.target.value}}})]),_c('button',{attrs:{\"disabled\":!_vm.isValidJoinCode || !_vm.joinUserName},on:{\"click\":_vm.joinRoom}},[_vm._v(\" 방 들어가기 \")])]),(_vm.error)?_c('div',{staticClass:\"error-message\"},[_vm._v(\" \"+_vm._s(_vm.error)+\" \")]):_vm._e(),(_vm.isLoading)?_c('div',{staticClass:\"loading-indicator\"},[_vm._v(\" 처리 중... \")]):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"home\">\n    <div class=\"container\">\n      <h1 class=\"title\">Quick Share</h1>\n      \n      <!-- 방 만들기 영역 -->\n      <div class=\"room-controls\">\n        <div class=\"input-group\">\n          <input\n            v-model=\"roomCode\"\n            placeholder=\"방 코드 입력 (6자리)\"\n            maxlength=\"6\"\n            pattern=\"\\d*\"\n            @input=\"validateInput\"\n          />\n        </div>\n        <div class=\"button-group\">\n          <button\n            @click=\"createRoom\"\n            :disabled=\"roomCode && !isValidCode\"\n          >\n            {{ roomCode ? '새 방 만들기' : '자동 코드로 방 만들기' }}\n          </button>\n        </div>\n      </div>\n      \n      <!-- 방 들어가기 영역 -->\n      <div class=\"room-join\">\n        <h2 class=\"section-title\">기존 방 들어가기</h2>\n        <div class=\"input-group\">\n          <input\n            v-model=\"joinRoomCode\"\n            placeholder=\"참여할 방 코드 입력\"\n            maxlength=\"6\"\n            pattern=\"\\d*\"\n            @input=\"validateJoinInput\"\n          />\n          <input\n            v-model=\"joinUserName\"\n            placeholder=\"이름 입력\"\n            maxlength=\"20\"\n          />\n        </div>\n        <button\n          @click=\"joinRoom\"\n          :disabled=\"!isValidJoinCode || !joinUserName\"\n        >\n          방 들어가기\n        </button>\n      </div>\n      \n      <div v-if=\"error\" class=\"error-message\">\n        {{ error }}\n      </div>\n      \n      <div v-if=\"isLoading\" class=\"loading-indicator\">\n        처리 중...\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\n// axios 인스턴스 생성\nconst api = axios.create({\n  baseURL: `https://file2.schoolworks.dev/api`,\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// API 요청/응답 로깅을 위한 인터셉터 추가\napi.interceptors.request.use(request => {\n  console.log('API 요청:', request.method, request.url, request.data);\n  return request;\n});\n\napi.interceptors.response.use(\n  response => {\n    console.log('API 응답 성공:', response.status, response.data);\n    return response;\n  },\n  error => {\n    console.error('API 응답 오류:', \n      error.response ? `${error.response.status} ${JSON.stringify(error.response.data)}` : error.message\n    );\n    return Promise.reject(error);\n  }\n);\n\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      joinRoomCode: '',\n      joinUserName: '',\n      error: '',\n      isLoading: false\n    }\n  },\n  created() {\n    // 로컬 스토리지에서 이전에 사용한 이름 가져오기\n    const savedUserName = localStorage.getItem('userName');\n    if (savedUserName) {\n      this.joinUserName = savedUserName;\n    }\n  },\n  computed: {\n    isValidCode() {\n      return /^\\d{6}$/.test(this.roomCode);\n    },\n    isValidJoinCode() {\n      return /^\\d{6}$/.test(this.joinRoomCode);\n    }\n  },\n  methods: {\n    validateInput() {\n      this.roomCode = this.roomCode.replace(/[^\\d]/g, '');\n    },\n    validateJoinInput() {\n      this.joinRoomCode = this.joinRoomCode.replace(/[^\\d]/g, '');\n    },\n    async createRoom() {\n      if (this.isLoading) return;\n      this.error = '';\n      this.isLoading = true;\n\n      try {\n        // 새로운 방 생성 (사용자가 지정한 방 코드 또는 자동 생성)\n        const requestData = {};\n        \n        // 방 코드가 유효한 경우 요청에 포함\n        if (this.roomCode && this.isValidCode) {\n          requestData.roomCode = this.roomCode;\n        }\n        \n        const response = await api.post('/rooms', requestData);\n        \n        if (response.data && response.data.roomCode) {\n          this.saveRecentRoom(response.data.roomCode);\n          this.navigateToRoom(response.data.roomCode);\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 409) {\n          this.showError('이미 존재하는 방 코드입니다. 다른 코드를 입력해주세요.');\n        } else if (error.response) {\n          this.showError(error.response.data.message || '서버 오류가 발생했습니다.');\n        } else if (error.request) {\n          this.showError('서버에 연결할 수 없습니다.');\n        } else {\n          this.showError('알 수 없는 오류가 발생했습니다.');\n        }\n        console.error('Error:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async joinRoom() {\n      if (!this.isValidJoinCode) {\n        this.showError('유효한 방 코드를 입력해주세요 (6자리 숫자)');\n        return;\n      }\n      \n      if (!this.joinUserName.trim()) {\n        this.showError('이름을 입력해주세요');\n        return;\n      }\n      \n      if (this.isLoading) return;\n      this.error = '';\n      this.isLoading = true;\n      \n      // 이름 저장\n      localStorage.setItem('userName', this.joinUserName);\n      \n      try {\n        // 백엔드로 룸번호와 이름을 함께 전송하여 방 입장 처리\n        const response = await api.post(`/rooms/${this.joinRoomCode}`, {\n          userName: this.joinUserName\n        });\n        \n        if (response.data) {\n          this.saveRecentRoom(this.joinRoomCode);\n          \n          // 룸번호와 사용자 이름을 쿼리 파라미터로 전달하여 방으로 이동\n          this.$router.push({\n            path: `/room/${this.joinRoomCode}`,\n            query: { userName: this.joinUserName }\n          });\n        }\n      } catch (error) {\n        console.error('방 참여 오류:', error);\n        \n        if (error.response && error.response.status === 404) {\n          this.showError('존재하지 않는 방입니다.');\n        } else if (error.response) {\n          this.showError(error.response.data.message || '서버 오류가 발생했습니다.');\n        } else if (error.request) {\n          this.showError('서버에 연결할 수 없습니다.');\n        } else {\n          this.showError('알 수 없는 오류가 발생했습니다.');\n        }\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    showError(message) {\n      this.error = message;\n    },\n    saveRecentRoom(roomCode) {\n      const recentRooms = JSON.parse(localStorage.getItem('recentRooms') || '[]');\n      if (!recentRooms.includes(roomCode)) {\n        recentRooms.unshift(roomCode);\n        if (recentRooms.length > 5) recentRooms.pop();\n        localStorage.setItem('recentRooms', JSON.stringify(recentRooms));\n      }\n    },\n    navigateToRoom(roomCode) {\n      // 방으로 이동할 때 쿼리 파라미터로 사용자 이름 전달\n      this.$router.push({\n        path: `/room/${roomCode}`,\n        query: this.joinUserName ? { userName: this.joinUserName } : undefined\n      }).catch(err => {\n        if (err.name !== 'NavigationDuplicated') {\n          throw err;\n        }\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home {\n  padding: 20px;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f5f7fa;\n}\n\n.container {\n  width: 100%;\n  max-width: 600px;\n  text-align: center;\n  padding: 30px;\n  background-color: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.title {\n  margin-bottom: 30px;\n  color: #3f51b5;\n  font-size: 2.5rem;\n}\n\n.section-title {\n  margin-top: 10px;\n  margin-bottom: 15px;\n  color: #3f51b5;\n  font-size: 1.5rem;\n}\n\n.room-controls,\n.room-join {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 20px;\n  width: 100%;\n  padding: 15px;\n  border-radius: 8px;\n  background-color: #f9f9f9;\n}\n\n.input-group {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 100%;\n}\n\n.button-group {\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  width: 100%;\n}\n\ninput {\n  width: 100%;\n  padding: 12px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  transition: border-color 0.3s;\n}\n\ninput:focus {\n  border-color: #3f51b5;\n  outline: none;\n}\n\nbutton {\n  padding: 12px 20px;\n  font-size: 16px;\n  background-color: #3f51b5;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\nbutton:hover {\n  background-color: #303f9f;\n}\n\nbutton:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.error-message {\n  color: #f44336;\n  margin-top: 16px;\n  padding: 10px;\n  background-color: rgba(244, 67, 54, 0.1);\n  border-radius: 8px;\n}\n\n.loading-indicator {\n  margin-top: 16px;\n  padding: 10px;\n  color: #3f51b5;\n  background-color: rgba(63, 81, 181, 0.1);\n  border-radius: 8px;\n}\n\n@media (min-width: 600px) {\n  .input-group {\n    flex-direction: row;\n  }\n  \n  .button-group {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n}\n\n@media (max-width: 600px) {\n  .container {\n    padding: 20px;\n  }\n  \n  .input-group {\n    flex-direction: column;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HomeView.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HomeView.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./HomeView.vue?vue&type=template&id=5353dce3&scoped=true\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\nimport style0 from \"./HomeView.vue?vue&type=style&index=0&id=5353dce3&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5353dce3\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"room\"},[(_vm.notification.show)?_c('div',{staticClass:\"notification\",class:{ 'error-notification': _vm.notification.isError }},[_vm._v(\" \"+_vm._s(_vm.notification.message)+\" \")]):_vm._e(),_c('div',{staticClass:\"room-header\"},[_c('div',{staticClass:\"room-info\"},[_c('div',{staticClass:\"room-code-container\"},[_c('h2',[_vm._v(\"방 코드: \"+_vm._s(_vm.roomCode))]),_c('div',{staticClass:\"room-buttons\"},[_c('button',{staticClass:\"qr-code-button\",on:{\"click\":function($event){return _vm.showQrCode()}}},[_vm._v(\" QR코드 보기 \")]),_c('button',{staticClass:\"home-button\",on:{\"click\":function($event){return _vm.navigateToHome()}}},[_vm._v(\" 홈으로 \")])])])]),_c('div',{staticClass:\"expiry-timer\",class:{ 'expiry-warning': _vm.expiresIn < 600 }},[_vm._v(\" 남은 시간: \"+_vm._s(_vm.formatTime(_vm.expiresIn))+\" \")])]),(_vm.showQrUserNameModal)?_c('div',{staticClass:\"qr-username-modal\"},[_c('div',{staticClass:\"qr-username-content\"},[_c('h3',[_vm._v(\"환영합니다!\")]),_c('p',[_vm._v(\"QR 코드를 통해 방에 참여하셨습니다. 사용자 이름을 입력해주세요.\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.qrUserName),expression:\"qrUserName\"}],ref:\"qrUserNameInput\",staticClass:\"qr-username-input\",attrs:{\"placeholder\":\"사용자 이름 입력\"},domProps:{\"value\":(_vm.qrUserName)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.saveQrUserName.apply(null, arguments)},\"input\":function($event){if($event.target.composing)return;_vm.qrUserName=$event.target.value}}}),_c('button',{staticClass:\"qr-username-button\",on:{\"click\":_vm.saveQrUserName}},[_vm._v(\"확인\")])])]):_vm._e(),_c('div',{staticClass:\"room-content\"},[_c('div',{staticClass:\"content-panel\"},[_c('div',{staticClass:\"file-upload-section\"},[_c('h3',[_vm._v(\"파일 업로드\")]),_c('div',{staticClass:\"drop-zone-container\"},[_c('div',{staticClass:\"drop-zone\",class:{ 'drop-zone-active': _vm.isDragging },on:{\"dragover\":function($event){$event.preventDefault();return _vm.onDragOver.apply(null, arguments)},\"dragleave\":function($event){$event.preventDefault();return _vm.onDragLeave.apply(null, arguments)},\"drop\":function($event){$event.preventDefault();return _vm.onDrop.apply(null, arguments)},\"click\":_vm.openFilePicker}},[_c('div',{staticClass:\"drop-zone-content\"},[(_vm.isUploading)?_c('div',{staticClass:\"upload-progress-container\"},[_c('div',{staticClass:\"upload-progress-bar\",style:({ width: _vm.uploadProgress + '%' })}),_c('div',{staticClass:\"upload-progress-text\"},[_vm._v(_vm._s(_vm.uploadProgress)+\"% 업로드 중...\")])]):_c('div',[_c('div',{staticClass:\"drop-icon\"},[_vm._v(\"📤\")]),_c('p',[_vm._v(\"파일을 드래그하거나 클릭하세요\")]),_c('p',{staticStyle:{\"font-size\":\"12px\",\"color\":\"#666\",\"margin-top\":\"5px\"}},[_vm._v(\"자동으로 업로드됩니다\")])]),_c('input',{ref:\"fileInput\",staticClass:\"file-input\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"id\":\"fileInput\",\"accept\":\"*/*\"},on:{\"change\":_vm.handleFileChange,\"click\":function($event){$event.stopPropagation();}}})]),(_vm.selectedFile && !_vm.isUploading)?_c('div',{staticClass:\"selected-file\"},[_c('span',{staticClass:\"selected-file-name\"},[_vm._v(_vm._s(_vm.selectedFile.name))]),_c('button',{staticClass:\"clear-file-button\",on:{\"click\":function($event){$event.stopPropagation();return _vm.clearSelectedFile.apply(null, arguments)}}},[_vm._v(\"✕\")])]):_vm._e()])])]),_c('div',{staticClass:\"file-list-section\"},[_c('div',{staticClass:\"file-list-header\"},[_c('h3',[_vm._v(\"파일 목록\")]),(_vm.files.length > 0)?_c('button',{staticClass:\"download-all-button\",class:{ 'downloading': _vm.isDownloadingAll },attrs:{\"disabled\":_vm.isDownloadingAll},on:{\"click\":_vm.downloadAllFiles}},[_c('span',{staticClass:\"button-text\"},[_vm._v(_vm._s(_vm.isDownloadingAll ? '다운로드 중...' : '전체 파일 다운로드'))]),(_vm.isDownloadingAll)?_c('span',{staticClass:\"loading-spinner\"}):_vm._e()]):_vm._e()]),(_vm.isLoading)?_c('div',{staticClass:\"loading-message\"},[_vm._v(\" 파일 목록을 불러오는 중... \")]):(_vm.files.length === 0)?_c('div',{staticClass:\"empty-message\"},[_vm._v(\" 공유된 파일이 없습니다. \")]):_c('ul',{staticClass:\"file-list\"},_vm._l((_vm.files),function(file){return _c('li',{key:file._uniqueKey || _vm.generateUUID(),staticClass:\"file-item\",class:{\n              'is-office-document': file.isOfficeDocument,\n              'is-selected': _vm.selectedDocument && _vm.selectedDocument.filename === file.filename\n            }},[_c('div',{staticClass:\"file-info\"},[_c('div',{staticClass:\"file-header\"},[_c('span',{staticClass:\"file-name\"},[_vm._v(_vm._s(file.originalName))]),_c('span',{staticClass:\"file-uploader\"},[_c('span',{staticClass:\"uploader-label\"},[_vm._v(\"업로더:\")]),_c('span',{staticClass:\"uploader-name\",class:{ 'my-upload': file.userName === _vm.userName }},[_vm._v(\" \"+_vm._s(file.userName || '익명')+\" \"),(file.userName === _vm.userName)?_c('span',{staticClass:\"my-upload-badge\"},[_vm._v(\"(내 파일)\")]):_vm._e()])])]),_c('div',{staticClass:\"file-details\"},[_c('span',{staticClass:\"file-size\"},[_vm._v(_vm._s(_vm.formatFileSize(file.size)))]),_c('span',{staticClass:\"file-date\"},[_vm._v(_vm._s(_vm.formatDate(file.uploadedAt)))]),(file.expiresAt)?_c('span',{staticClass:\"file-expiry\",class:{ 'expiry-soon': _vm.isExpiringSoon(file) }},[_vm._v(\" 만료: \"+_vm._s(_vm.formatExpiryTime(file.expiresAt))+\" \")]):_vm._e(),_c('span',{staticClass:\"debug-info\",staticStyle:{\"display\":\"none\"}},[_vm._v(_vm._s(JSON.stringify(file)))]),(file.viewCount > 0)?_c('span',{staticClass:\"view-count\"},[_vm._v(_vm._s(file.viewCount)+\" 명 보는 중\")]):_vm._e()])]),_c('div',{staticClass:\"file-actions\"},[_c('button',{staticClass:\"preview-button\",on:{\"click\":function($event){return _vm.previewFile(file)}}},[_vm._v(\" 미리보기 \")]),_c('button',{staticClass:\"download-button\",on:{\"click\":function($event){return _vm.downloadFile(file)}}},[_vm._v(\" 다운로드 \")])])])}),0)])])]),(_vm.showQrCodeModal)?_c('div',{staticClass:\"qr-code-modal\",on:{\"click\":_vm.closeQrCodeModal}},[_c('div',{staticClass:\"qr-code-modal-content\",on:{\"click\":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:\"qr-code-modal-header\"},[_c('h3',[_vm._v(\"QR 코드\")]),_c('button',{staticClass:\"close-button\",on:{\"click\":_vm.closeQrCodeModal}},[_vm._v(\"×\")])]),_c('div',{staticClass:\"qr-code-modal-body\"},[_c('div',{ref:\"qrcodeLarge\",staticClass:\"qr-code-large\"}),_c('p',{staticClass:\"qr-code-modal-text\"},[_vm._v(\"이 QR 코드를 스캔하여 방에 참여하세요\")]),_c('p',{staticClass:\"qr-code-modal-room\"},[_vm._v(\"방 코드: \"+_vm._s(_vm.roomCode))])])])]):_vm._e(),(!_vm.isSocketConnected)?_c('div',{staticClass:\"connection-status-banner\"},[_vm._m(0),_c('div',{staticClass:\"connection-status-text\"},[_vm._v(\" 서버와의 연결이 끊겼습니다. 재연결 중... \")])]):_vm._e(),(_vm.previewModal.show)?_c('div',{staticClass:\"preview-modal\",on:{\"click\":_vm.closePreview}},[_c('div',{staticClass:\"preview-content\",on:{\"click\":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:\"preview-header\"},[_c('h3',[_vm._v(_vm._s(_vm.previewModal.file ? _vm.previewModal.file.originalName : '파일 미리보기'))]),_c('button',{staticClass:\"close-button\",on:{\"click\":_vm.closePreview}},[_vm._v(\"×\")])]),_c('div',{staticClass:\"preview-body\"},[(_vm.previewModal.isLoading)?_c('div',{staticClass:\"preview-loading\"},[_c('div',{staticClass:\"loading-spinner\"}),_c('p',[_vm._v(\"미리보기 로딩 중...\")])]):(_vm.previewModal.file && _vm.isImageFile(_vm.previewModal.file))?_c('img',{staticClass:\"preview-image\",attrs:{\"src\":_vm.previewModal.previewUrl,\"alt\":\"이미지 미리보기\"}}):(_vm.previewModal.file && _vm.isPdfFile(_vm.previewModal.file))?_c('iframe',{staticClass:\"preview-pdf\",attrs:{\"src\":_vm.previewModal.previewUrl,\"frameborder\":\"0\"}}):(_vm.previewModal.file && _vm.isExcelFile(_vm.previewModal.file))?_c('iframe',{staticClass:\"preview-excel\",attrs:{\"src\":_vm.previewModal.officeViewerUrl,\"frameborder\":\"0\"}}):(_vm.previewModal.file && _vm.isOfficeFile(_vm.previewModal.file))?_c('iframe',{staticClass:\"preview-office\",attrs:{\"src\":_vm.previewModal.officeViewerUrl,\"frameborder\":\"0\"}}):(_vm.previewModal.file && _vm.isVideoFile(_vm.previewModal.file))?_c('video',{staticClass:\"preview-video\",attrs:{\"src\":_vm.previewModal.previewUrl,\"controls\":\"\"}}):(_vm.previewModal.file && _vm.isAudioFile(_vm.previewModal.file))?_c('audio',{staticClass:\"preview-audio\",attrs:{\"src\":_vm.previewModal.previewUrl,\"controls\":\"\"}}):(_vm.previewModal.file && _vm.isTextFile(_vm.previewModal.file) && _vm.previewModal.textContent)?_c('div',{staticClass:\"preview-text\"},[_c('pre',[_vm._v(_vm._s(_vm.previewModal.textContent))])]):_c('div',{staticClass:\"preview-unsupported\"},[_c('div',{staticClass:\"unsupported-icon\"},[_vm._v(\"📄\")]),_c('p',[_vm._v(\"이 파일 형식은 미리보기를 지원하지 않습니다.\")]),_c('button',{staticClass:\"download-button\",on:{\"click\":function($event){return _vm.downloadFile(_vm.previewModal.file)}}},[_vm._v(\" 다운로드 \")])])])])]):_vm._e()])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"connection-status-icon\"},[_c('span',{staticClass:\"connection-dot\"})])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"room\">\n    <!-- 알림 표시 -->\n    <div\n      v-if=\"notification.show\"\n      class=\"notification\"\n      :class=\"{ 'error-notification': notification.isError }\"\n    >\n      {{ notification.message }}\n    </div>\n    <div class=\"room-header\">\n      <div class=\"room-info\">\n        <div class=\"room-code-container\">\n          <h2>방 코드: {{ roomCode }}</h2>\n          <div class=\"room-buttons\">\n            <button @click=\"showQrCode()\" class=\"qr-code-button\">\n              QR코드 보기\n            </button>\n            <button @click=\"navigateToHome()\" class=\"home-button\">\n              홈으로\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"expiry-timer\" :class=\"{ 'expiry-warning': expiresIn < 600 }\">\n        남은 시간: {{ formatTime(expiresIn) }}\n      </div>\n    </div>\n\n    <!-- QR 코드 인식 후 사용자 이름 입력 모달 -->\n    <div v-if=\"showQrUserNameModal\" class=\"qr-username-modal\">\n      <div class=\"qr-username-content\">\n        <h3>환영합니다!</h3>\n        <p>QR 코드를 통해 방에 참여하셨습니다. 사용자 이름을 입력해주세요.</p>\n        <input\n          v-model=\"qrUserName\"\n          @keyup.enter=\"saveQrUserName\"\n          placeholder=\"사용자 이름 입력\"\n          class=\"qr-username-input\"\n          ref=\"qrUserNameInput\"\n        />\n        <button @click=\"saveQrUserName\" class=\"qr-username-button\">확인</button>\n      </div>\n    </div>\n\n    <div class=\"room-content\">\n      <div class=\"content-panel\">\n        <!-- 파일 업로드 영역 -->\n        <div class=\"file-upload-section\">\n          <h3>파일 업로드</h3>\n\n          <!-- 드래그 앤 드롭 영역 -->\n          <div class=\"drop-zone-container\">\n            <div\n              class=\"drop-zone\"\n              :class=\"{ 'drop-zone-active': isDragging }\"\n              @dragover.prevent=\"onDragOver\"\n              @dragleave.prevent=\"onDragLeave\"\n              @drop.prevent=\"onDrop\"\n              @click=\"openFilePicker\"\n            >\n              <div class=\"drop-zone-content\">\n                <div v-if=\"isUploading\" class=\"upload-progress-container\">\n                  <div class=\"upload-progress-bar\" :style=\"{ width: uploadProgress + '%' }\"></div>\n                  <div class=\"upload-progress-text\">{{ uploadProgress }}% 업로드 중...</div>\n                </div>\n                <div v-else>\n                  <div class=\"drop-icon\">📤</div>\n                  <p>파일을 드래그하거나 클릭하세요</p>\n                  <p style=\"font-size: 12px; color: #666; margin-top: 5px;\">자동으로 업로드됩니다</p>\n                </div>\n                <input\n                  type=\"file\"\n                  id=\"fileInput\"\n                  ref=\"fileInput\"\n                  @change=\"handleFileChange\"\n                  class=\"file-input\"\n                  style=\"display: none;\"\n                  @click.stop\n                  accept=\"*/*\"\n                />\n              </div>\n              <div v-if=\"selectedFile && !isUploading\" class=\"selected-file\">\n                <span class=\"selected-file-name\">{{ selectedFile.name }}</span>\n                <button @click.stop=\"clearSelectedFile\" class=\"clear-file-button\">✕</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 파일 목록 영역 -->\n        <div class=\"file-list-section\">\n          <div class=\"file-list-header\">\n            <h3>파일 목록</h3>\n            <button\n              v-if=\"files.length > 0\"\n              @click=\"downloadAllFiles\"\n              class=\"download-all-button\"\n              :class=\"{ 'downloading': isDownloadingAll }\"\n              :disabled=\"isDownloadingAll\"\n            >\n              <span class=\"button-text\">{{ isDownloadingAll ? '다운로드 중...' : '전체 파일 다운로드' }}</span>\n              <span v-if=\"isDownloadingAll\" class=\"loading-spinner\"></span>\n            </button>\n          </div>\n\n          <div v-if=\"isLoading\" class=\"loading-message\">\n            파일 목록을 불러오는 중...\n          </div>\n          <div v-else-if=\"files.length === 0\" class=\"empty-message\">\n            공유된 파일이 없습니다.\n          </div>\n          <ul v-else class=\"file-list\">\n            <li\n              v-for=\"file in files\"\n              :key=\"file._uniqueKey || generateUUID()\"\n              class=\"file-item\"\n              :class=\"{\n                'is-office-document': file.isOfficeDocument,\n                'is-selected': selectedDocument && selectedDocument.filename === file.filename\n              }\"\n            >\n              <div class=\"file-info\">\n                <div class=\"file-header\">\n                  <span class=\"file-name\">{{ file.originalName }}</span>\n                  <span class=\"file-uploader\">\n                    <span class=\"uploader-label\">업로더:</span>\n                    <span class=\"uploader-name\" :class=\"{ 'my-upload': file.userName === userName }\">\n                      {{ file.userName || '익명' }}\n                      <span v-if=\"file.userName === userName\" class=\"my-upload-badge\">(내 파일)</span>\n                    </span>\n                  </span>\n                </div>\n                <div class=\"file-details\">\n                  <span class=\"file-size\">{{ formatFileSize(file.size) }}</span>\n                  <span class=\"file-date\">{{ formatDate(file.uploadedAt) }}</span>\n                  <!-- 만료 시간 표시 -->\n                  <span v-if=\"file.expiresAt\" class=\"file-expiry\" :class=\"{ 'expiry-soon': isExpiringSoon(file) }\">\n                    만료: {{ formatExpiryTime(file.expiresAt) }}\n                  </span>\n                  <!-- 디버깅용 -->\n                  <span class=\"debug-info\" style=\"display: none;\">{{ JSON.stringify(file) }}</span>\n                  <span v-if=\"file.viewCount > 0\" class=\"view-count\">{{ file.viewCount }} 명 보는 중</span>\n                </div>\n              </div>\n              <div class=\"file-actions\">\n                <button @click=\"previewFile(file)\" class=\"preview-button\">\n                  미리보기\n                </button>\n                <button @click=\"downloadFile(file)\" class=\"download-button\">\n                  다운로드\n                </button>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n\n    <!-- QR 코드 모달 -->\n    <div class=\"qr-code-modal\" v-if=\"showQrCodeModal\" @click=\"closeQrCodeModal\">\n      <div class=\"qr-code-modal-content\" @click.stop>\n        <div class=\"qr-code-modal-header\">\n          <h3>QR 코드</h3>\n          <button class=\"close-button\" @click=\"closeQrCodeModal\">×</button>\n        </div>\n        <div class=\"qr-code-modal-body\">\n          <div class=\"qr-code-large\" ref=\"qrcodeLarge\"></div>\n          <p class=\"qr-code-modal-text\">이 QR 코드를 스캔하여 방에 참여하세요</p>\n          <p class=\"qr-code-modal-room\">방 코드: {{ roomCode }}</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 연결 상태 표시 배너 -->\n    <div v-if=\"!isSocketConnected\" class=\"connection-status-banner\">\n      <div class=\"connection-status-icon\">\n        <span class=\"connection-dot\"></span>\n      </div>\n      <div class=\"connection-status-text\">\n        서버와의 연결이 끊겼습니다. 재연결 중...\n      </div>\n    </div>\n\n    <!-- 파일 미리보기 모달 -->\n    <div class=\"preview-modal\" v-if=\"previewModal.show\" @click=\"closePreview\">\n      <div class=\"preview-content\" @click.stop>\n        <div class=\"preview-header\">\n          <h3>{{ previewModal.file ? previewModal.file.originalName : '파일 미리보기' }}</h3>\n          <button class=\"close-button\" @click=\"closePreview\">×</button>\n        </div>\n        <div class=\"preview-body\">\n          <div v-if=\"previewModal.isLoading\" class=\"preview-loading\">\n            <div class=\"loading-spinner\"></div>\n            <p>미리보기 로딩 중...</p>\n          </div>\n\n          <!-- 이미지 미리보기 -->\n          <img\n            v-else-if=\"previewModal.file && isImageFile(previewModal.file)\"\n            :src=\"previewModal.previewUrl\"\n            alt=\"이미지 미리보기\"\n            class=\"preview-image\"\n          />\n\n          <!-- PDF 미리보기 -->\n          <iframe\n            v-else-if=\"previewModal.file && isPdfFile(previewModal.file)\"\n            :src=\"previewModal.previewUrl\"\n            class=\"preview-pdf\"\n            frameborder=\"0\"\n          ></iframe>\n\n          <!-- Excel 파일 미리보기 -->\n          <iframe\n            v-else-if=\"previewModal.file && isExcelFile(previewModal.file)\"\n            :src=\"previewModal.officeViewerUrl\"\n            class=\"preview-excel\"\n            frameborder=\"0\"\n          ></iframe>\n\n          <!-- Office 파일 미리보기 -->\n          <iframe\n            v-else-if=\"previewModal.file && isOfficeFile(previewModal.file)\"\n            :src=\"previewModal.officeViewerUrl\"\n            class=\"preview-office\"\n            frameborder=\"0\"\n          ></iframe>\n\n          <!-- 비디오 미리보기 -->\n          <video\n            v-else-if=\"previewModal.file && isVideoFile(previewModal.file)\"\n            :src=\"previewModal.previewUrl\"\n            controls\n            class=\"preview-video\"\n          ></video>\n\n          <!-- 오디오 미리보기 -->\n          <audio\n            v-else-if=\"previewModal.file && isAudioFile(previewModal.file)\"\n            :src=\"previewModal.previewUrl\"\n            controls\n            class=\"preview-audio\"\n          ></audio>\n\n          <!-- 텍스트 미리보기 -->\n          <div\n            v-else-if=\"previewModal.file && isTextFile(previewModal.file) && previewModal.textContent\"\n            class=\"preview-text\"\n          >\n            <pre>{{ previewModal.textContent }}</pre>\n          </div>\n\n          <!-- 미리보기 불가능한 파일 -->\n          <div v-else class=\"preview-unsupported\">\n            <div class=\"unsupported-icon\">📄</div>\n            <p>이 파일 형식은 미리보기를 지원하지 않습니다.</p>\n            <button @click=\"downloadFile(previewModal.file)\" class=\"download-button\">\n              다운로드\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport io from 'socket.io-client'\n\n// UUID 생성 함수\nfunction generateUUID() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    const r = Math.random() * 16 | 0\n    const v = c === 'x' ? r : (r & 0x3 | 0x8)\n    return v.toString(16)\n  })\n}\n\nexport default {\n  name: 'RoomView',\n  data() {\n    const apiBaseUrl = process.env.VUE_APP_API_URL;\n\n    return {\n      roomCode: this.$route.params.roomId,\n      expiresIn: 3600,\n      timerInterval: null,\n      localTimerInterval: null,\n      apiUrl: apiBaseUrl,\n      socketUrl: apiBaseUrl,\n      socket: null,\n      isSocketConnected: false,\n      pingInterval: null,\n      lastPongTime: null,\n      selectedFile: null,\n      isUploading: false,\n      uploadProgress: 0,\n      uploadError: '',\n      uploadSuccess: '',\n      files: [],\n      isLoading: false,\n      userId: `user_${Date.now()}_${Math.floor(Math.random() * 1000)}`, // 임시 사용자 ID\n      hasJoinedRoom: false, // 방 참여 여부 추적\n      isDragging: false, // 드래그 앤 드롭 상태 추적\n      isDownloadingAll: false, // 전체 파일 다운로드 상태\n      notification: {\n        show: false,\n        message: '',\n        timeout: null,\n        isError: false\n      },\n      userName: '', // 사용자 이름 저장 변수 추가\n      isEditingUserName: false, // 사용자 이름 편집 모드 상태\n      editUserName: '', // 편집 중인 사용자 이름\n      previewModal: {\n        show: false,\n        file: null,\n        previewUrl: '',\n        officeViewerUrl: '',\n        textContent: null,\n        isLoading: false\n      },\n      // QR 코드 관련 변수\n      qrCodeUrl: '',\n      showQrUserNameModal: false,\n      showQrCodeModal: false,\n      qrUserName: '',\n      isQrScanned: false\n    }\n  },\n  async created() {\n    // 환경 변수 확인 및 로깅\n    console.log('API URL:', this.apiUrl)\n    console.log('Socket URL:', this.socketUrl)\n\n    // URL 쿼리 파라미터에서 userName 가져오기\n    console.log('URL 쿼리 파라미터:', this.$route.query);\n\n    // URL에서 직접 userName 파라미터 추출\n    const urlParams = new URLSearchParams(window.location.search);\n    const userNameFromUrl = urlParams.get('userName');\n    console.log('URL에서 직접 추출한 userName:', userNameFromUrl);\n\n    // QR 코드 스캔 여부 확인\n    const fromQr = urlParams.get('fromQr') === 'true';\n\n    if (fromQr && !this.isQrScanned) {\n      // QR 코드를 통해 접속한 경우 사용자 이름 입력 모달 표시\n      this.isQrScanned = true;\n      this.showQrUserNameModal = true;\n      // 기본 사용자 이름은 빈 값으로 설정\n      this.qrUserName = '';\n      this.userName = '';\n    } else {\n      // 일반 접속인 경우 URL에서 사용자 이름 가져오기 (기본값: '내 파일')\n      this.userName = userNameFromUrl || '내 파일';\n      console.log('최종 설정된 사용자 이름:', this.userName);\n\n      // 현재 URL에 userName 파라미터가 없으면 추가\n      if (!userNameFromUrl) {\n        const currentUrl = new URL(window.location.href);\n        currentUrl.searchParams.set('userName', this.userName);\n        window.history.replaceState({}, '', currentUrl.toString());\n      }\n    }\n\n    try {\n      // 방 참여 또는 생성 시도\n      await this.joinOrCreateRoom()\n      this.startExpiryTimer()\n      this.loadFiles()\n      this.connectSocket()\n\n      // QR 코드 URL 생성 (모달에서 사용할 URL 미리 준비)\n      this.generateQrCode()\n\n      // QR 코드 스캔 후 사용자 이름 입력 모달이 표시된 경우 입력 필드에 포커스\n      if (this.showQrUserNameModal) {\n        this.$nextTick(() => {\n          if (this.$refs.qrUserNameInput) {\n            this.$refs.qrUserNameInput.focus();\n          }\n        });\n      }\n    } catch (error) {\n      console.error('방 참여 오류:', error)\n      this.navigateToHome()\n    }\n  },\n  beforeDestroy() {\n    // 타이머 정리\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n    }\n\n    if (this.localTimerInterval) {\n      clearInterval(this.localTimerInterval);\n    }\n\n    // 핑 타이머 정리\n    if (this.pingInterval) {\n      clearInterval(this.pingInterval);\n      this.pingInterval = null;\n    }\n\n    // Socket.IO 연결 해제\n    if (this.socket) {\n      // 연결 해제 전에 로그 출력\n      console.log('컴포넌트 소멸 시 Socket.IO 연결 해제');\n\n      // 명시적으로 연결 해제\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  },\n  methods: {\n    async joinOrCreateRoom() {\n      try {\n        // 방 참여 시도\n        const response = await axios.post(`${this.apiUrl}/api/rooms/${this.roomCode}`, {}, \n          { withCredentials: true }\n        )\n        this.expiresIn = response.data.expiresIn || 3600\n\n        // 처음 참여하는 경우에만 알림 표시\n        if (!this.hasJoinedRoom) {\n          this.showNotification('방에 성공적으로 참여했습니다.')\n          this.hasJoinedRoom = true\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          // 방이 없는 경우, 6자리 숫자인지 확인\n          if (/^\\d{6}$/.test(this.roomCode)) {\n            // 방 생성 시도\n            try {\n              const createResponse = await axios.post(`${this.apiUrl}/api/rooms`, { roomCode: this.roomCode }, {\n                withCredentials: true\n              })\n              this.expiresIn = createResponse.data.expiresIn || 3600\n              this.showNotification('새 방이 생성되었습니다.')\n              this.hasJoinedRoom = true\n            } catch (createError) {\n              console.error('방 생성 오류:', createError)\n              throw createError\n            }\n          } else {\n            throw error\n          }\n        } else {\n          throw error\n        }\n      }\n    },\n\n    async checkRoomStatus() {\n      try {\n        const response = await axios.get(`${this.apiUrl}/api/rooms/${this.roomCode}/status`, {\n          withCredentials: true\n        })\n        if (!response.data.active) {\n          this.navigateToHome()\n          alert('방이 만료되었습니다.')\n          return\n        }\n\n        // 서버에서 받은 만료 시간으로 업데이트\n        const serverExpiresIn = response.data.expiresIn\n\n        // 만료 시간이 변경된 경우에만 업데이트\n        if (this.expiresIn !== serverExpiresIn) {\n          console.log('서버 만료 시간으로 업데이트:', serverExpiresIn)\n          this.expiresIn = serverExpiresIn\n\n          // 로컬 타이머 재시작\n          this.updateTimer()\n        }\n      } catch (error) {\n        console.error('방 상태 확인 실패:', error)\n        this.navigateToHome()\n      }\n    },\n    navigateToHome() {\n      // 중복 이동 오류 처리\n      this.$router.push('/').catch(err => {\n        if (err.name !== 'NavigationDuplicated') {\n          throw err\n        }\n      })\n    },\n    startExpiryTimer() {\n      // 초기 타이머 시작\n      this.updateTimer()\n\n      // 5초마다 서버에서 실제 만료 시간 확인\n      this.timerInterval = setInterval(() => {\n        this.checkRoomStatus()\n      }, 5000)\n    },\n\n    updateTimer() {\n      // 로컬 타이머 (서버 업데이트 사이에 사용)\n      if (this.localTimerInterval) {\n        clearInterval(this.localTimerInterval)\n      }\n\n      this.localTimerInterval = setInterval(() => {\n        this.expiresIn--\n        if (this.expiresIn <= 0) {\n          clearInterval(this.localTimerInterval)\n          clearInterval(this.timerInterval)\n          this.navigateToHome()\n          alert('방이 만료되었습니다.')\n        }\n      }, 1000)\n    },\n    formatTime(seconds) {\n      const hours = Math.floor(seconds / 3600)\n      const minutes = Math.floor((seconds % 3600) / 60)\n      const remainingSeconds = seconds % 60\n\n      return `${hours}:${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}`\n    },\n\n    // 파일 업로드 관련 메서드\n    handleFileChange(event) {\n      this.selectedFile = event.target.files[0] || null\n      this.uploadError = ''\n      this.uploadSuccess = ''\n\n      // 파일이 선택되면 자동으로 업로드 시작 (모바일 사용자 편의성 개선)\n      if (this.selectedFile) {\n        this.showNotification('파일 업로드 중...', 10000) // 업로드 중 알림 (최대 10초)\n        this.uploadFile()\n      }\n    },\n\n    // 드래그 앤 드롭 관련 메서드\n    onDragOver() {\n      this.isDragging = true\n    },\n\n    onDragLeave() {\n      this.isDragging = false\n    },\n\n    onDrop(event) {\n      this.isDragging = false\n\n      if (event.dataTransfer.files.length) {\n        this.selectedFile = event.dataTransfer.files[0]\n        this.uploadError = ''\n        this.uploadSuccess = ''\n\n        // 파일이 드롭되면 자동으로 업로드 시작\n        this.showNotification('파일 업로드 중...', 10000) // 업로드 중 알림 (최대 10초)\n        this.uploadFile()\n      }\n    },\n\n    openFilePicker(event) {\n      // 이미 선택된 파일이 표시되는 영역 또는 삭제 버튼을 클릭한 경우\n      // 파일 피커가 열리지 않도록 방지\n      if (event.target.closest('.selected-file') ||\n          event.target.closest('.file-select-button') ||\n          event.target.closest('.clear-file-button')) {\n        return;\n      }\n\n      // 파일 입력 필드 클릭\n      this.$refs.fileInput.click();\n    },\n\n    clearSelectedFile() {\n      this.selectedFile = null\n      this.$refs.fileInput.value = ''\n      this.uploadError = ''\n      this.uploadSuccess = ''\n    },\n\n    async uploadFile() {\n      if (!this.selectedFile) {\n        this.uploadError = '업로드할 파일을 선택해주세요.'\n        this.showNotification('업로드할 파일을 선택해주세요.', 3000, true)\n        return\n      }\n\n      this.isUploading = true\n      this.uploadProgress = 0\n      this.uploadError = ''\n      this.uploadSuccess = ''\n\n      const formData = new FormData()\n      formData.append('file', this.selectedFile)\n\n      // 소켓 연결 시 설정된 사용자 이름 사용\n      const userName = this.userName || '내 파일'\n      formData.append('userName', userName)\n\n      // 디버깅용 로그\n      console.log('파일 업로드 시 사용자 이름:', userName)\n\n      // Socket ID 추가 (자신이 업로드한 파일 식별용)\n      if (this.socket && this.socket.connected) {\n        formData.append('socketId', this.socket.id)\n      }\n\n      // 현재 URL에 userName 파라미터 업데이트\n      const urlParams = new URLSearchParams(window.location.search);\n      const userNameFromUrl = urlParams.get('userName');\n\n      // URL 파라미터와 현재 사용자 이름이 다르면 URL 업데이트\n      if (userNameFromUrl !== userName) {\n        // 현재 URL 가져오기\n        const currentUrl = new URL(window.location.href);\n        // userName 파라미터 설정\n        currentUrl.searchParams.set('userName', userName);\n        // 브라우저 히스토리 업데이트 (페이지 새로고침 없이)\n        window.history.replaceState({}, '', currentUrl.toString());\n      }\n\n      console.log('업로드 시 사용자 이름:', userName)\n\n      console.log('업로드 시작:', {\n        fileName: this.selectedFile.name,\n        fileSize: this.selectedFile.size,\n        fileType: this.selectedFile.type,\n        roomCode: this.roomCode\n      })\n\n      try {\n        console.log('요청 URL:', `${this.apiUrl}/api/rooms/${this.roomCode}/files`)\n\n        const response = await axios.post(\n          `${this.apiUrl}/api/rooms/${this.roomCode}/files`,\n          formData,\n          {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            },\n            withCredentials: true,\n            timeout: 60000, // 60초로 타임아웃 시간 증가\n            onUploadProgress: progressEvent => {\n              const percentCompleted = Math.round(\n                (progressEvent.loaded * 100) / progressEvent.total\n              )\n              this.uploadProgress = percentCompleted\n              console.log('업로드 진행률:', percentCompleted + '%')\n            }\n          }\n        )\n\n        console.log('업로드 응답:', response.data)\n\n        const successMessage = response.data.message || '파일이 성공적으로 업로드되었습니다.'\n        this.uploadSuccess = successMessage\n        this.uploadProgress = 100\n        this.showNotification(successMessage, 3000)\n\n        this.selectedFile = null\n        if (this.$refs.fileInput) {\n          this.$refs.fileInput.value = ''\n        }\n\n        // 업로드된 파일 정보 가져오기\n        const uploadedFile = response.data.file\n\n        // 파일에 고유 키 추가\n        if (uploadedFile) {\n          uploadedFile._uniqueKey = generateUUID()\n\n          // 파일 목록에 새 파일 추가 (중복 방지)\n          const existingFileIndex = this.files.findIndex(file => file.filename === uploadedFile.filename)\n\n          if (existingFileIndex !== -1) {\n            // 기존 파일의 고유 키 유지\n            uploadedFile._uniqueKey = this.files[existingFileIndex]._uniqueKey\n            // 기존 파일 업데이트\n            this.files.splice(existingFileIndex, 1, uploadedFile)\n          } else {\n            // 새 파일 추가\n            this.files.push(uploadedFile)\n          }\n\n          // 파일 목록 정렬 (최신 업로드 순)\n          this.files.sort((a, b) => b.uploadedAt - a.uploadedAt)\n        }\n      } catch (error) {\n        console.error('파일 업로드 오류:', error)\n\n        if (error.response) {\n          console.error('서버 응답 오류:', {\n            status: error.response.status,\n            data: error.response.data,\n            headers: error.response.headers\n          })\n        } else if (error.request) {\n          console.error('요청은 전송됐으나 응답 없음:', error.request)\n        } else {\n          console.error('요청 생성 중 오류:', error.message)\n        }\n\n        const errorMessage = error.response?.data?.message || '파일 업로드에 실패했습니다.'\n        this.uploadError = errorMessage\n        this.uploadProgress = 0\n        this.showNotification(errorMessage, 5000, true)\n      } finally {\n        this.isUploading = false\n      }\n    },\n\n    // 파일 목록 관련 메서드\n    async loadFiles() {\n      this.isLoading = true\n\n      try {\n        const response = await axios.get(`${this.apiUrl}/api/rooms/${this.roomCode}/files`, {\n          withCredentials: true\n        })\n        const files = response.data.files || []\n\n        // 중복 파일 제거 및 고유 ID 할당\n        const filenameMap = new Map()\n\n        // 파일명으로 중복 제거\n        files.forEach(file => {\n          // 이미 동일한 파일명이 있는 경우 가장 최근 파일로 대체\n          if (!filenameMap.has(file.filename) || file.uploadedAt > filenameMap.get(file.filename).uploadedAt) {\n            filenameMap.set(file.filename, file)\n          }\n        })\n\n        // 중복이 제거된 파일 목록 가져오기\n        const uniqueFiles = Array.from(filenameMap.values())\n\n        console.log('서버에서 받은 파일 목록:', uniqueFiles);\n\n        // 각 파일에 고유 ID 할당 (이미 있는 경우 유지)\n        this.files = uniqueFiles.map(file => {\n          // 사용자 이름 처리 (항상 Redis에 저장된 이름 사용)\n          if (file.userName === undefined || file.userName === null || file.userName === '') {\n            console.log('사용자 이름 없음, 기본값 사용:', file.originalName);\n            file.userName = '익명';\n          }\n          // 사용자 이름이 있는 경우 그대로 사용\n          console.log('파일 정보:', file.originalName, '업로더:', file.userName);\n          return {\n            ...file,\n            _uniqueKey: generateUUID() // 렌더링용 고유 키\n          };\n        })\n      } catch (error) {\n        console.error('파일 목록 로드 오류:', error)\n        this.files = []\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    // 파일 다운로드 메서드\n    async downloadFile(file) {\n      try {\n        this.showNotification('파일 다운로드 중...', 5000)\n\n        // 다운로드 URL 생성 (ID 사용)\n        const downloadUrl = `${this.apiUrl}/api/rooms/${this.roomCode}/files/download/${file.id}?download=true`\n        console.log('파일 다운로드 시도:', file.originalName, downloadUrl)\n\n        // axios를 사용하여 파일 다운로드\n        const response = await axios({\n          url: downloadUrl,\n          method: 'GET',\n          responseType: 'blob',\n          withCredentials: true,\n          timeout: 60000 // 60초 타임아웃\n        })\n\n        // 파일 타입 결정 (MIME 타입이 있으면 사용, 없으면 기본값)\n        const contentType = file.mimetype || 'application/octet-stream'\n\n        // Blob 생성\n        const blob = new Blob([response.data], { type: contentType })\n\n        // 다운로드 링크 생성\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', file.originalName)\n        document.body.appendChild(link)\n\n        // 다운로드 시작\n        link.click()\n\n        // 약간의 지연 후 링크 제거 (브라우저가 다운로드를 시작할 시간 제공)\n        setTimeout(() => {\n          window.URL.revokeObjectURL(url)\n          document.body.removeChild(link)\n        }, 100)\n\n        this.showNotification('파일 다운로드가 시작되었습니다.', 3000)\n      } catch (error) {\n        console.error('파일 다운로드 오류:', error)\n        console.error('오류 세부 정보:', error.message, error.stack)\n        this.showNotification('파일 다운로드에 실패했습니다.', 5000, true)\n      }\n    },\n\n    // 파일 삭제 메서드\n    async deleteFile(file) {\n      if (!confirm(`파일 \"${file.originalName}\"을(를) 삭제하시겠습니까?`)) {\n        return\n      }\n\n      try {\n        const response = await axios.delete(`${this.apiUrl}/api/rooms/${this.roomCode}/files/${file.id}`, {\n          withCredentials: true\n        })\n\n        // 파일 목록에서 삭제\n        const fileIndex = this.files.findIndex(f => f.id === file.id)\n        if (fileIndex !== -1) {\n          this.files.splice(fileIndex, 1)\n        }\n\n        this.showNotification(response.data.message || '파일이 삭제되었습니다.')\n      } catch (error) {\n        console.error('파일 삭제 오류:', error)\n        this.showNotification('파일 삭제에 실패했습니다.')\n      }\n    },\n\n    // 전체 파일 다운로드 메서드\n    async downloadAllFiles() {\n      if (this.files.length === 0) {\n        this.showNotification('다운로드할 파일이 없습니다.', 3000, true)\n        return\n      }\n\n      this.isDownloadingAll = true\n      this.showNotification('전체 파일 다운로드 준비 중...', 10000)\n\n      try {\n        // 현재 표시된 파일 목록 사용 (API 호출 대신)\n        console.log('현재 파일 목록 사용:', this.files)\n\n        const filesToDownload = this.files || []\n\n        if (filesToDownload.length === 0) {\n          this.showNotification('다운로드할 파일이 없습니다.', 3000, true)\n          this.isDownloadingAll = false\n          return\n        }\n\n        this.showNotification(`${filesToDownload.length}개 파일 다운로드 중...`, 30000)\n\n        // 각 파일을 순차적으로 다운로드\n        let downloadedCount = 0\n        let failedCount = 0\n\n        for (let i = 0; i < filesToDownload.length; i++) {\n          const file = filesToDownload[i]\n          try {\n            // 다운로드 URL 생성\n            const downloadUrl = `${this.apiUrl}/api/rooms/${this.roomCode}/files/download/${file.id}`\n            console.log(`파일 다운로드 시도 (${i+1}/${filesToDownload.length}):`, file.originalName, downloadUrl)\n\n            // 파일 다운로드\n            const fileResponse = await axios({\n              url: downloadUrl,\n              method: 'GET',\n              responseType: 'blob',\n              withCredentials: true,\n              timeout: 60000 // 60초로 타임아웃 증가\n            })\n\n            // 파일 타입 결정 (MIME 타입이 있으면 사용, 없으면 기본값)\n            const contentType = file.mimetype || 'application/octet-stream'\n\n            // Blob 생성\n            const blob = new Blob([fileResponse.data], { type: contentType })\n\n            // 다운로드 링크 생성\n            const url = window.URL.createObjectURL(blob)\n            const link = document.createElement('a')\n            link.href = url\n            link.setAttribute('download', file.originalName)\n\n            // 링크를 DOM에 추가하고 클릭 이벤트 발생\n            document.body.appendChild(link)\n            link.click()\n\n            // 약간의 지연 후 링크 제거 (브라우저가 다운로드를 시작할 시간 제공)\n            setTimeout(() => {\n              window.URL.revokeObjectURL(url)\n              document.body.removeChild(link)\n            }, 100)\n\n            downloadedCount++\n\n            // 진행 상황 업데이트\n            if (i < filesToDownload.length - 1) {\n              this.showNotification(`파일 다운로드 중... (${downloadedCount}/${filesToDownload.length})`, 30000)\n            }\n\n            // 잠시 대기 (브라우저 다운로드 처리 시간 제공)\n            await new Promise(resolve => setTimeout(resolve, 1000))\n          } catch (fileError) {\n            console.error(`파일 다운로드 오류 (${file.originalName}):`, fileError)\n            console.error('오류 세부 정보:', fileError.message, fileError.stack)\n            failedCount++\n          }\n        }\n\n        if (failedCount > 0) {\n          this.showNotification(`${downloadedCount}개 파일 다운로드 완료, ${failedCount}개 실패`, 5000, true)\n        } else {\n          this.showNotification(`${downloadedCount}개 파일 다운로드가 완료되었습니다.`, 5000)\n        }\n      } catch (error) {\n        console.error('전체 파일 다운로드 오류:', error)\n        console.error('오류 세부 정보:', error.message, error.stack)\n        this.showNotification('전체 파일 다운로드에 실패했습니다.', 5000, true)\n      } finally {\n        this.isDownloadingAll = false\n      }\n    },\n\n    // 알림 표시 메서드\n    showNotification(message, duration = 3000, isError = false) {\n      // 이전 타이머가 있는 경우 취소\n      if (this.notification.timeout) {\n        clearTimeout(this.notification.timeout)\n      }\n\n      // 알림 표시\n      this.notification.message = message\n      this.notification.show = true\n      this.notification.isError = isError\n\n      // 일정 시간 후 알림 숨기기\n      this.notification.timeout = setTimeout(() => {\n        this.notification.show = false\n      }, duration)\n    },\n\n    // 파일 크기 포맷팅\n    formatFileSize(bytes) {\n      if (bytes === 0) return '0 Bytes'\n\n      const k = 1024\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    },\n\n    // 날짜 포맷팅\n    formatDate(timestamp) {\n      if (!timestamp) return '알 수 없음'\n\n      const date = new Date(timestamp)\n      const now = new Date()\n\n      // 오늘 날짜인 경우 시간만 표시\n      if (date.toDateString() === now.toDateString()) {\n        return `오늘 ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n      }\n\n      // 어제 날짜인 경우 '어제'로 표시\n      const yesterday = new Date(now)\n      yesterday.setDate(now.getDate() - 1)\n      if (date.toDateString() === yesterday.toDateString()) {\n        return `어제 ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n      }\n\n      // 그 외의 경우 날짜와 시간 모두 표시\n      return `${date.getMonth() + 1}/${date.getDate()} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n    },\n\n    // 파일 만료 시간 포맷\n    formatExpiryTime(timestamp) {\n      if (!timestamp) return '알 수 없음'\n\n      const expiryDate = new Date(timestamp)\n      const now = new Date()\n\n      // 남은 시간 계산 (밀리초)\n      const remainingTime = expiryDate - now\n\n      // 이미 만료된 경우\n      if (remainingTime <= 0) {\n        return '만료됨'\n      }\n\n      // 1시간 이내인 경우 분 단위로 표시\n      if (remainingTime < 3600000) {\n        const minutes = Math.ceil(remainingTime / 60000)\n        return `${minutes}분 후`\n      }\n\n      // 오늘 만료되는 경우 시간만 표시\n      if (expiryDate.toDateString() === now.toDateString()) {\n        return `오늘 ${expiryDate.getHours().toString().padStart(2, '0')}:${expiryDate.getMinutes().toString().padStart(2, '0')}`\n      }\n\n      // 내일 만료되는 경우 '내일'로 표시\n      const tomorrow = new Date(now)\n      tomorrow.setDate(now.getDate() + 1)\n      if (expiryDate.toDateString() === tomorrow.toDateString()) {\n        return `내일 ${expiryDate.getHours().toString().padStart(2, '0')}:${expiryDate.getMinutes().toString().padStart(2, '0')}`\n      }\n\n      // 그 외의 경우 날짜와 시간 모두 표시\n      return `${expiryDate.getMonth() + 1}/${expiryDate.getDate()} ${expiryDate.getHours().toString().padStart(2, '0')}:${expiryDate.getMinutes().toString().padStart(2, '0')}`\n    },\n\n    // 파일이 곧 만료되는지 확인 (30분 이내)\n    isExpiringSoon(file) {\n      if (!file.expiresAt) return false\n\n      const expiryDate = new Date(file.expiresAt)\n      const now = new Date()\n\n      // 남은 시간 계산 (밀리초)\n      const remainingTime = expiryDate - now\n\n      // 30분(1800000 밀리초) 이내인 경우 true 반환\n      return remainingTime > 0 && remainingTime < 1800000\n    },\n\n    // 사용자 이름 편집 시작\n    startEditUserName() {\n      this.editUserName = this.userName\n      this.isEditingUserName = true\n\n      // 다음 틱에서 입력 필드에 포커스\n      this.$nextTick(() => {\n        if (this.$refs.userNameInput) {\n          this.$refs.userNameInput.focus()\n        }\n      })\n    },\n\n    // 사용자 이름 저장\n    saveUserName() {\n      // 빈 문자열이면 기본값 사용\n      if (!this.editUserName.trim()) {\n        this.editUserName = '내 파일'\n      }\n\n      // 이름이 변경된 경우에만 처리\n      if (this.userName !== this.editUserName) {\n        this.userName = this.editUserName.trim()\n\n        // URL 파라미터 업데이트\n        const currentUrl = new URL(window.location.href)\n        currentUrl.searchParams.set('userName', this.userName)\n        window.history.replaceState({}, '', currentUrl.toString())\n\n        // 알림 표시\n        this.showNotification(`사용자 이름이 '${this.userName}'(으)로 변경되었습니다.`)\n      }\n\n      this.isEditingUserName = false\n    },\n\n    // QR 코드 관련 메서드\n    generateQrCode() {\n      try {\n        // 현재 URL에서 fromQr 파라미터 제거 (있는 경우)\n        const currentUrl = new URL(window.location.href);\n        currentUrl.searchParams.delete('fromQr');\n\n        // QR 코드용 URL 생성 (fromQr 파라미터 추가)\n        const qrUrl = new URL(currentUrl.toString());\n        qrUrl.searchParams.set('fromQr', 'true');\n        this.qrCodeUrl = qrUrl.toString();\n      } catch (error) {\n        console.error('QR 코드 URL 생성 오류:', error);\n      }\n    },\n\n    // QR 코드 모달 표시\n    showQrCode() {\n      this.showQrCodeModal = true;\n\n      // QR 코드 생성 (모달이 표시된 후)\n      this.$nextTick(() => {\n        this.generateQrCodeInModal();\n      });\n    },\n\n    // QR 코드 모달 닫기\n    closeQrCodeModal() {\n      this.showQrCodeModal = false;\n    },\n\n    // 모달 내 QR 코드 생성\n    async generateQrCodeInModal() {\n      try {\n        if (this.$refs.qrcodeLarge) {\n          const qrCodeElement = this.$refs.qrcodeLarge;\n\n          // 기존 내용 제거\n          qrCodeElement.innerHTML = '';\n\n          // QR 코드 생성 중 로딩 표시\n          const loadingElement = document.createElement('div');\n          loadingElement.className = 'qr-loading';\n          loadingElement.textContent = 'QR 코드 생성 중...';\n          qrCodeElement.appendChild(loadingElement);\n\n          // QR 코드 캔버스 생성\n          const canvas = document.createElement('canvas');\n\n          // QR 코드 생성 (비동기)\n          await this.$qrcode.toCanvas(canvas, this.qrCodeUrl, {\n            width: 400,\n            margin: 4,\n            color: {\n              dark: '#000000',\n              light: '#ffffff'\n            },\n            errorCorrectionLevel: 'H' // 높은 오류 수정 레벨\n          });\n\n          // 로딩 요소 제거\n          qrCodeElement.innerHTML = '';\n\n          // 캔버스 추가\n          canvas.className = 'qr-code-img-large';\n          qrCodeElement.appendChild(canvas);\n\n          // 아래에 URL 텍스트 추가\n          const urlText = document.createElement('div');\n          urlText.className = 'qr-url-text';\n          urlText.textContent = this.qrCodeUrl;\n          qrCodeElement.appendChild(urlText);\n        }\n      } catch (error) {\n        console.error('QR 코드 생성 오류:', error);\n\n        // 오류 발생 시 사용자에게 알림\n        if (this.$refs.qrcodeLarge) {\n          this.$refs.qrcodeLarge.innerHTML = '<div class=\"qr-error\">QR 코드 생성 중 오류가 발생했습니다.</div>';\n        }\n      }\n    },\n\n    saveQrUserName() {\n      if (this.qrUserName.trim()) {\n        // 사용자 이름 저장\n        this.userName = this.qrUserName.trim();\n\n        // URL 파라미터 업데이트\n        const currentUrl = new URL(window.location.href);\n        currentUrl.searchParams.set('userName', this.userName);\n        currentUrl.searchParams.delete('fromQr'); // fromQr 파라미터 제거\n        window.history.replaceState({}, '', currentUrl.toString());\n\n        // 소켓 연결 업데이트\n        if (this.socket && this.socket.connected) {\n          this.socket.emit('updateUserName', {\n            roomCode: this.roomCode,\n            userName: this.userName\n          });\n        }\n\n        // 모달 닫기\n        this.showQrUserNameModal = false;\n\n        // 환영 메시지 표시\n        this.showNotification(`환영합니다, ${this.userName}님!`, 3000);\n      } else {\n        // 빈 이름인 경우 기본값 설정\n        this.qrUserName = '방문자';\n      }\n    },\n\n    // 파일 미리보기 메서드\n    async previewFile(file) {\n      // 미리보기 모달 초기화\n      this.previewModal.file = file\n      this.previewModal.previewUrl = ''\n      this.previewModal.officeViewerUrl = ''\n      this.previewModal.textContent = null\n      this.previewModal.isLoading = true\n      this.previewModal.show = true\n\n      try {\n        // 다운로드 URL 생성\n        const downloadUrl = `${this.apiUrl}/api/rooms/${this.roomCode}/files/download/${file.id}`\n\n        // 파일 유형에 따라 다른 처리\n        if (this.isImageFile(file) || this.isPdfFile(file) || this.isVideoFile(file) || this.isAudioFile(file)) {\n          // 미디어 파일은 URL로 직접 표시\n          this.previewModal.previewUrl = downloadUrl\n        } else if (this.isExcelFile(file) || this.isOfficeFile(file)) {\n          // Excel 및 Office 파일은 Google Docs Viewer를 사용하여 표시\n          const encodedUrl = encodeURIComponent(`${window.location.origin}${downloadUrl}`)\n          this.previewModal.officeViewerUrl = `https://docs.google.com/viewer?url=${encodedUrl}&embedded=true`\n\n          // Microsoft Office Online Viewer 대체 옵션 (필요시 사용)\n          // this.previewModal.officeViewerUrl = `https://view.officeapps.live.com/op/embed.aspx?src=${encodedUrl}`\n        } else if (this.isTextFile(file)) {\n          // 텍스트 파일은 내용을 가져와서 표시\n          const response = await axios({\n            url: downloadUrl,\n            method: 'GET',\n            responseType: 'text',\n            withCredentials: true\n          })\n          this.previewModal.textContent = response.data\n        }\n      } catch (error) {\n        console.error('파일 미리보기 오류:', error)\n        this.showNotification('파일 미리보기를 불러오는데 실패했습니다.', 3000, true)\n      } finally {\n        this.previewModal.isLoading = false\n      }\n    },\n\n    // 미리보기 모달 닫기\n    closePreview() {\n      this.previewModal.show = false\n      this.previewModal.file = null\n      this.previewModal.previewUrl = ''\n      this.previewModal.textContent = null\n    },\n\n    // 파일 유형 확인 메서드\n    isImageFile(file) {\n      return file.mimetype && file.mimetype.startsWith('image/')\n    },\n\n    isPdfFile(file) {\n      return file.mimetype === 'application/pdf'\n    },\n\n    isVideoFile(file) {\n      return file.mimetype && file.mimetype.startsWith('video/')\n    },\n\n    isAudioFile(file) {\n      return file.mimetype && file.mimetype.startsWith('audio/')\n    },\n\n    isExcelFile(file) {\n      const excelTypes = [\n        'application/vnd.ms-excel',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        'application/vnd.oasis.opendocument.spreadsheet'\n      ]\n      return excelTypes.includes(file.mimetype) ||\n        (file.originalName && /\\.(xlsx|xls|csv|ods)$/i.test(file.originalName))\n    },\n\n    isOfficeFile(file) {\n      const officeTypes = [\n        // Word\n        'application/msword',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        // PowerPoint\n        'application/vnd.ms-powerpoint',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n      ]\n      return officeTypes.includes(file.mimetype) ||\n        (file.originalName && /\\.(doc|docx|ppt|pptx)$/i.test(file.originalName))\n    },\n\n    isTextFile(file) {\n      const textTypes = [\n        'text/plain', 'text/html', 'text/css', 'text/javascript',\n        'application/json', 'application/xml', 'application/javascript'\n      ]\n      return textTypes.includes(file.mimetype)\n    },\n\n    // Socket.IO 연결 관련 메서드\n    connectSocket() {\n      // 이미 연결된 소켓이 있으면 재사용\n      if (this.socket && this.socket.connected) {\n        console.log('이미 연결된 Socket.IO 재사용');\n        return;\n      }\n\n      // Socket.IO 연결 생성\n      this.socket = io(this.socketUrl, {\n        reconnection: true,        // 자동 재연결 활성화\n        reconnectionAttempts: 20,  // 최대 20번 재연결 시도\n        reconnectionDelay: 1000,   // 재연결 시도 간격 (1초)\n        reconnectionDelayMax: 5000, // 최대 재연결 지연 시간 (5초)\n        timeout: 30000,            // 연결 타임아웃 (30초)\n        transports: ['websocket', 'polling'], // 웹소켓 우선, 폴링 백업\n        withCredentials: true,     // 인증 정보 포함\n        extraHeaders: {            // 추가 헤더\n          'Access-Control-Allow-Origin': window.location.origin\n        }\n      });\n\n      // 연결 이벤트\n      this.socket.on('connect', () => {\n        console.log('Socket.IO 연결 성공:', this.socket.id);\n\n        // 연결 상태 표시\n        this.isSocketConnected = true;\n\n        // URL에서 직접 사용자 이름 추출\n        const urlParams = new URLSearchParams(window.location.search);\n        const userNameFromUrl = urlParams.get('userName');\n\n        // 주소창에서 사용자 이름 가져오기\n        const userName = userNameFromUrl || this.userName || '내 파일';\n        console.log('Socket 연결 시 사용자 이름:', userName);\n\n        // 사용자 이름 설정\n        this.userName = userName;\n\n        // 방에 참여 (사용자 이름도 전송)\n        this.socket.emit('joinRoom', this.roomCode, userName);\n\n        // 핑 타이머 시작\n        this.startPingTimer();\n      });\n\n      // 방 참여 확인 이벤트\n      this.socket.on('joinedRoom', (data) => {\n        console.log('방 참여 확인:', data);\n      });\n\n      // 재연결 이벤트\n      this.socket.on('reconnect', (attemptNumber) => {\n        console.log(`Socket.IO 재연결 성공 (시도 ${attemptNumber}번째)`);\n\n        // 연결 상태 표시\n        this.isSocketConnected = true;\n\n        // 재연결 시 방에 다시 참여\n        const urlParams = new URLSearchParams(window.location.search);\n        const userNameFromUrl = urlParams.get('userName');\n        const userName = userNameFromUrl || this.userName || '내 파일';\n\n        // 사용자 이름 설정\n        this.userName = userName;\n\n        // 방에 다시 참여\n        this.socket.emit('joinRoom', this.roomCode, userName);\n\n        // 핑 타이머 재시작\n        this.startPingTimer();\n      });\n\n      // 재연결 시도 이벤트\n      this.socket.on('reconnect_attempt', (attemptNumber) => {\n        console.log(`Socket.IO 재연결 시도 중 (${attemptNumber}번째)...`);\n      });\n\n      // 재연결 오류 이벤트\n      this.socket.on('reconnect_error', (error) => {\n        console.error('Socket.IO 재연결 오류:', error);\n      });\n\n      // 재연결 실패 이벤트\n      this.socket.on('reconnect_failed', () => {\n        console.error('Socket.IO 재연결 실패 (최대 시도 횟수 초과)');\n        this.isSocketConnected = false;\n\n        // 사용자에게 알림\n        this.showNotification('서버 연결이 끊겼습니다. 페이지를 새로고침해 주세요.', 10000, true);\n      });\n\n      // 파일 업로드 이벤트\n      this.socket.on('fileUploaded', (data) => {\n        console.log('새 파일 업로드 알림 수신:', data)\n\n        // 내가 업로드한 파일이면 무시 (이미 처리됨)\n        if (data.uploaderId === this.socket.id) {\n          console.log('내가 업로드한 파일이므로 이벤트 무시');\n          return;\n        }\n\n        // 파일에 고유 키 추가\n        const newFile = {\n          ...data.file,\n          _uniqueKey: generateUUID()\n        }\n\n        // 사용자 이름 처리 (항상 Redis에 저장된 이름 사용)\n        if (newFile.userName === undefined || newFile.userName === null || newFile.userName === '') {\n          console.log('Socket 이벤트: 사용자 이름 없음, 기본값 사용:', newFile.originalName);\n          newFile.userName = '익명';\n        }\n\n        // 파일 목록에 새 파일 추가 (중복 방지)\n        const existingFileIndex = this.files.findIndex(file => file.filename === newFile.filename)\n\n        if (existingFileIndex !== -1) {\n          // 기존 파일의 고유 키 유지\n          newFile._uniqueKey = this.files[existingFileIndex]._uniqueKey\n          // 기존 파일 업데이트\n          this.files.splice(existingFileIndex, 1, newFile)\n        } else {\n          // 새 파일 추가\n          this.files.push(newFile)\n\n          // 다른 사용자가 업로드한 파일이면 알림 표시\n          this.showNotification(`${newFile.userName}님이 새 파일을 업로드했습니다.`, 3000)\n        }\n\n        // 파일 목록 정렬 (최신 업로드 순)\n        this.files.sort((a, b) => b.uploadedAt - a.uploadedAt)\n      })\n\n      // 파일 삭제 이벤트\n      this.socket.on('fileDeleted', (data) => {\n        console.log('파일 삭제 알림 수신:', data)\n\n        // 파일 목록에서 삭제\n        const fileIndex = this.files.findIndex(file =>\n          (file.id && file.id === data.id) ||\n          file.filename === data.filename\n        )\n\n        if (fileIndex !== -1) {\n          const deletedFile = this.files[fileIndex];\n          this.files.splice(fileIndex, 1)\n\n          // 삭제 이유에 따라 다른 알림 표시\n          if (data.reason === 'expired') {\n            this.showNotification(`\"${deletedFile.originalName}\" 파일이 만료되어 자동으로 삭제되었습니다.`, 5000, true);\n          } else {\n            this.showNotification('파일이 삭제되었습니다.');\n          }\n        }\n      })\n\n      // 연결 오류 이벤트\n      this.socket.on('connect_error', (error) => {\n        console.error('Socket.IO 연결 오류:', error);\n        this.isSocketConnected = false;\n      });\n\n      // 연결 해제 이벤트\n      this.socket.on('disconnect', (reason) => {\n        console.log('Socket.IO 연결 해제:', reason);\n        this.isSocketConnected = false;\n\n        // 핑 타이머 정리\n        if (this.pingInterval) {\n          clearInterval(this.pingInterval);\n          this.pingInterval = null;\n        }\n\n        // 자동으로 재연결되지 않는 이유인 경우 사용자에게 알림\n        if (reason === 'io server disconnect' || reason === 'io client disconnect') {\n          this.showNotification('서버와의 연결이 끊겼습니다. 페이지를 새로고침해 주세요.', 10000, true);\n        }\n      });\n    },\n\n    // 핑 타이머 시작 (연결 유지를 위한 주기적인 핑 전송)\n    startPingTimer() {\n      // 이미 실행 중인 타이머가 있으면 정리\n      if (this.pingInterval) {\n        clearInterval(this.pingInterval);\n      }\n\n      // 20초마다 서버에 핑 전송\n      this.pingInterval = setInterval(() => {\n        if (this.socket && this.socket.connected) {\n          console.log('서버에 핑 전송...');\n          this.socket.emit('ping', (response) => {\n            if (response && response.status === 'ok') {\n              console.log('서버로부터 퐁 수신:', response.time);\n              this.lastPongTime = response.time;\n            }\n          });\n        } else {\n          console.warn('소켓이 연결되어 있지 않아 핑을 전송할 수 없습니다.');\n\n          // 소켓이 연결되어 있지 않으면 타이머 정리\n          clearInterval(this.pingInterval);\n          this.pingInterval = null;\n        }\n      }, 20000);\n    }\n  }\n}\n</script>\n\n<style scoped>\n:root {\n  --primary-color: #3f51b5;\n  --primary-light: #757de8;\n  --primary-dark: #002984;\n  --secondary-color: #ff4081;\n  --secondary-light: #ff79b0;\n  --secondary-dark: #c60055;\n  --text-on-primary: #ffffff;\n  --text-on-secondary: #ffffff;\n  --background-color: #f5f7fa;\n  --surface-color: #ffffff;\n  --error-color: #f44336;\n  --success-color: #4caf50;\n  --warning-color: #ff9800;\n  --info-color: #2196f3;\n}\n\n.room {\n  padding: 20px;\n  background-color: var(--background-color);\n  min-height: 100vh;\n  font-family: 'Roboto', 'Noto Sans KR', sans-serif;\n}\n\n.room-code-container {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 10px;\n}\n\n.room-buttons {\n  display: flex;\n  gap: 10px;\n}\n\n.qr-code-button {\n  background-color: var(--primary-color);\n  color: black;\n  font: black;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n}\n\n.home-button {\n  background-color: var(--primary-color);\n  color: white;\n  font: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n}\n\n.qr-code-button:hover, .home-button:hover {\n  background-color: var(--primary-dark);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n}\n\n.qr-code-button:active, .home-button:active {\n  transform: translateY(0);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.home-button {\n  background-color: #e74c3c; /* 홈 버튼은 다른 색상으로 구분 */\n}\n\n.home-button:hover {\n  background-color: #c0392b;\n}\n\n.qr-code-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1100;\n}\n\n.qr-code-modal-content {\n  background-color: white;\n  border-radius: 12px;\n  width: 90%;\n  max-width: 500px;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);\n  overflow: hidden;\n}\n\n.qr-code-modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 20px;\n  background-color: var(--primary-color);\n  color: white;\n}\n\n.qr-code-modal-header h3 {\n  margin: 0;\n  font-size: 20px;\n  font-weight: 500;\n}\n\n.qr-code-modal-body {\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.qr-code-large {\n  width: 100%;\n  max-width: 400px;\n  height: auto;\n  aspect-ratio: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n}\n\n.qr-code-img-large {\n  max-width: 100%;\n  max-height: 100%;\n  border-radius: 8px;\n}\n\n.qr-loading {\n  padding: 20px;\n  text-align: center;\n  color: #666;\n  font-size: 16px;\n}\n\n.qr-error {\n  padding: 20px;\n  text-align: center;\n  color: #e74c3c;\n  font-size: 16px;\n  background-color: #fdeaea;\n  border-radius: 8px;\n}\n\n.qr-url-text {\n  margin-top: 15px;\n  padding: 10px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  font-size: 14px;\n  word-break: break-all;\n  text-align: center;\n  color: #666;\n  border: 1px solid #ddd;\n  width: 100%;\n}\n\n.qr-code-modal-text {\n  font-size: 16px;\n  color: #555;\n  text-align: center;\n  margin-top: 20px;\n}\n\n.qr-code-modal-room {\n  font-size: 14px;\n  color: #777;\n  text-align: center;\n  margin-top: 10px;\n  font-weight: 500;\n}\n\n/* 연결 상태 표시 배너 */\n.connection-status-banner {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  background-color: rgba(220, 53, 69, 0.9);\n  color: white;\n  padding: 8px 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  animation: slideDown 0.3s ease-out;\n}\n\n.connection-status-icon {\n  margin-right: 10px;\n}\n\n.connection-dot {\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n  background-color: white;\n  border-radius: 50%;\n  animation: blink 1.5s infinite;\n}\n\n.connection-status-text {\n  font-size: 14px;\n  font-weight: 500;\n}\n\n@keyframes blink {\n  0% { opacity: 0.4; }\n  50% { opacity: 1; }\n  100% { opacity: 0.4; }\n}\n\n@keyframes slideDown {\n  from { transform: translateY(-100%); }\n  to { transform: translateY(0); }\n}\n\n.qr-username-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.qr-username-content {\n  background-color: white;\n  padding: 30px;\n  border-radius: 12px;\n  width: 90%;\n  max-width: 400px;\n  text-align: center;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n}\n\n.qr-username-content h3 {\n  margin-top: 0;\n  color: var(--primary-color);\n  font-size: 24px;\n}\n\n.qr-username-content p {\n  margin-bottom: 20px;\n  color: #555;\n}\n\n.qr-username-input {\n  width: 100%;\n  padding: 12px 15px;\n  border: 2px solid #ddd;\n  border-radius: 8px;\n  font-size: 16px;\n  margin-bottom: 20px;\n  transition: border-color 0.3s;\n}\n\n.qr-username-input:focus {\n  border-color: var(--primary-color);\n  outline: none;\n}\n\n.qr-username-button {\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.qr-username-button:hover {\n  background-color: var(--primary-dark);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n}\n\n.room-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 24px;\n  background-color: var(--primary-color);\n  color: var(--text-on-primary);\n  margin-bottom: 24px;\n  border-radius: 12px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.room-info {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.room-header h2 {\n  margin: 0;\n  font-size: 1.5rem;\n  font-weight: 500;\n}\n\n.user-name-container {\n  display: flex;\n  align-items: center;\n  font-size: 1rem;\n  opacity: 0.95;\n  margin-top: 8px;\n}\n\n.user-name {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding: 6px 12px;\n  border-radius: 20px;\n  transition: all 0.2s ease;\n  background-color: rgba(255, 255, 255, 0.15);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.user-name:hover {\n  background-color: rgba(255, 255, 255, 0.25);\n  transform: translateY(-1px);\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);\n}\n\n.user-name-label {\n  font-weight: 500;\n  margin-right: 6px;\n  color: rgba(255, 255, 255, 0.85);\n}\n\n.current-user-name {\n  font-weight: 600;\n  color: white;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  background-color: rgba(46, 204, 113, 0.2);\n  padding: 2px 8px;\n  border-radius: 10px;\n}\n\n.edit-icon {\n  margin-left: 8px;\n  font-size: 14px;\n  opacity: 0.8;\n}\n\n.user-name-edit {\n  width: 100%;\n}\n\n.user-name-input {\n  background-color: rgba(255, 255, 255, 0.2);\n  border: none;\n  border-radius: 20px;\n  padding: 6px 12px;\n  color: white;\n  font-size: 1rem;\n  width: 100%;\n  max-width: 250px;\n  outline: none;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.user-name-input::placeholder {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.expiry-timer {\n  font-family: 'Roboto Mono', monospace;\n  padding: 8px 12px;\n  border-radius: 20px;\n  background-color: rgba(255, 255, 255, 0.2);\n  color: var(--text-on-primary);\n  font-weight: 500;\n  letter-spacing: 1px;\n  transition: all 0.3s ease;\n}\n\n.expiry-warning {\n  background-color: var(--error-color);\n  color: var(--text-on-secondary);\n  animation: pulse 2s infinite;\n  box-shadow: 0 0 10px rgba(244, 67, 54, 0.5);\n}\n\n.room-content {\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 24px;\n  transition: all 0.3s ease;\n}\n\n.content-panel {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n}\n\n.file-upload-section,\n.file-list-section {\n  background-color: var(--surface-color);\n  padding: 24px;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  transition: all 0.3s ease;\n}\n\n.file-list-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.file-upload-section h3,\n.file-list-section h3 {\n  margin-top: 0;\n  margin-bottom: 0;\n  color: var(--primary-color);\n  font-size: 1.25rem;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n}\n\n.file-upload-section h3::before,\n.file-list-section h3::before {\n  content: '';\n  display: inline-block;\n  width: 4px;\n  height: 18px;\n  background-color: var(--primary-color);\n  margin-right: 8px;\n  border-radius: 2px;\n}\n\n.download-all-button {\n  background-color: #2ecc71;\n  color: white;\n  border: none;\n  border-radius: 20px;\n  padding: 10px 18px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  position: relative;\n  overflow: hidden;\n}\n\n.download-all-button::before {\n  content: '📦';\n  margin-right: 8px;\n  font-size: 16px;\n}\n\n.download-all-button::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.download-all-button:hover {\n  background-color: #27ae60;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n}\n\n.download-all-button:hover::after {\n  opacity: 1;\n}\n\n.download-all-button:active {\n  transform: translateY(0);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.download-all-button:disabled {\n  background-color: #95a5a6;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n.download-all-button:disabled::after {\n  display: none;\n}\n\n.download-all-button.downloading {\n  background-color: #27ae60;\n  padding-right: 40px;\n}\n\n.loading-spinner {\n  position: absolute;\n  right: 15px;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 16px;\n  height: 16px;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: #fff;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: translateY(-50%) rotate(0deg); }\n  100% { transform: translateY(-50%) rotate(360deg); }\n}\n\n/* 모달 미리보기 스타일 */\n.preview-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  backdrop-filter: blur(5px);\n  animation: fade-in 0.3s ease;\n}\n\n@keyframes fade-in {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n.preview-content {\n  background-color: white;\n  border-radius: 12px;\n  width: 90%;\n  max-width: 900px;\n  max-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n  animation: modal-appear 0.3s ease;\n}\n\n@keyframes modal-appear {\n  from { opacity: 0; transform: scale(0.9); }\n  to { opacity: 1; transform: scale(1); }\n}\n\n.preview-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 20px;\n  background-color: var(--primary-color);\n  color: white;\n  border-bottom: 1px solid #eee;\n}\n\n.preview-header h3 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 500;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 80%;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: all 0.2s ease;\n}\n\n.close-button:hover {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.preview-body {\n  padding: 20px;\n  overflow: auto;\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 300px;\n  max-height: calc(90vh - 70px);\n}\n\n.preview-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 30px;\n}\n\n.preview-loading .loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 3px solid rgba(255, 255, 255, 0.1);\n  border-radius: 50%;\n  border-top-color: var(--primary-color);\n  animation: spin 1s linear infinite;\n  margin-bottom: 16px;\n}\n\n.preview-loading p {\n  color: #666;\n  font-size: 14px;\n}\n\n.preview-image {\n  max-width: 100%;\n  max-height: calc(90vh - 110px);\n  object-fit: contain;\n  border-radius: 4px;\n}\n\n.preview-pdf, .preview-excel, .preview-office {\n  width: 100%;\n  height: calc(90vh - 110px);\n  border: none;\n  border-radius: 4px;\n  background-color: #f5f5f5;\n}\n\n.preview-excel, .preview-office {\n  min-height: 600px;\n}\n\n.preview-video, .preview-audio {\n  max-width: 100%;\n  max-height: calc(90vh - 110px);\n}\n\n.preview-text {\n  width: 100%;\n  max-height: calc(90vh - 110px);\n  overflow: auto;\n  background-color: #f5f5f5;\n  padding: 16px;\n  border-radius: 8px;\n}\n\n.preview-text pre {\n  margin: 0;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  font-family: 'Courier New', monospace;\n  font-size: 14px;\n  line-height: 1.5;\n}\n\n.preview-unsupported {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 30px;\n  text-align: center;\n}\n\n.unsupported-icon {\n  font-size: 64px;\n  margin-bottom: 16px;\n  color: #95a5a6;\n}\n\n.preview-unsupported p {\n  margin-bottom: 20px;\n  color: #7f8c8d;\n}\n\n/* 미리보기 버튼 스타일 */\n.preview-button {\n  background-color: var(--primary-color);\n  color: var(--text-on-primary);\n  margin-right: 8px;\n}\n\n.preview-button::before {\n  content: '👁️';\n  margin-right: 6px;\n  font-size: 14px;\n}\n\n.upload-form {\n  display: flex;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  position: relative;\n}\n\n.drop-zone-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n}\n\n.drop-zone {\n  border: 2px dashed #2ecc71;\n  border-radius: 20px;\n  padding: 25px 20px;\n  text-align: center;\n  margin-bottom: 20px;\n  transition: all 0.3s ease;\n  background-color: rgba(46, 204, 113, 0.05);\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  width: 60%;\n  max-width: 350px;\n  height: auto;\n  margin: 0 auto 20px auto;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.drop-zone:hover {\n  border-color: #27ae60;\n  background-color: rgba(46, 204, 113, 0.1);\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);\n  transform: translateY(-2px);\n}\n\n.drop-zone-active {\n  border-color: #27ae60;\n  background-color: rgba(46, 204, 113, 0.15);\n  box-shadow: 0 0 20px rgba(46, 204, 113, 0.4);\n  transform: scale(1.02);\n}\n\n.drop-zone-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n\n.upload-progress-container {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n}\n\n.upload-progress-bar {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  height: 100%;\n  background-color: rgba(46, 204, 113, 0.2);\n  transition: width 0.3s ease;\n  z-index: 1;\n  border-radius: 8px;\n}\n\n.upload-progress-text {\n  font-size: 18px;\n  font-weight: bold;\n  color: #2ecc71;\n  margin-bottom: 10px;\n  z-index: 2;\n  text-shadow: 0 0 5px rgba(255, 255, 255, 0.8);\n}\n\n.drop-icon {\n  font-size: 36px;\n  margin-bottom: 12px;\n  color: #2ecc71;\n}\n\n.drop-zone p {\n  margin: 4px 0;\n  color: #333;\n  font-size: 15px;\n  font-weight: 500;\n}\n\n.drop-zone-or {\n  display: none;\n}\n\n.file-select-button {\n  display: none;\n}\n\n.selected-file {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #e8eaf6;\n  padding: 8px 12px;\n  border-radius: 8px;\n  margin-top: 10px;\n  font-size: 12px;\n}\n\n.selected-file-name {\n  font-weight: 500;\n  color: #333;\n  word-break: break-all;\n  margin-right: 8px;\n  font-size: 12px;\n  max-width: 150px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.clear-file-button {\n  background: none;\n  border: none;\n  color: #757575;\n  cursor: pointer;\n  font-size: 14px;\n  padding: 2px 4px;\n  border-radius: 50%;\n  transition: all 0.3s ease;\n}\n\n.error-message {\n  color: var(--success-color);\n  margin-top: 12px;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n}\n\n.error-message::before {\n  color: var(--success-color);\n  content: '⚠️';\n  margin-top: 24px;\n  margin-right: 6px;\n}\n\n.success-message {\n  color: var(--success-color);\n  margin-top: 24px;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n}\n\n.success-message::before {\n  content: '✅';\n  margin-right: 6px;\n}\n\n.refresh-button {\n  padding: 8px 16px;\n  background-color: var(--info-color);\n  color: var(--text-on-primary);\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  margin-left: 12px;\n  font-size: 14px;\n  font-weight: 500;\n  display: inline-flex;\n  align-items: center;\n  transition: all 0.3s ease;\n}\n\n.refresh-button::before {\n  content: '🔄';\n  margin-right: 6px;\n  font-size: 14px;\n}\n\n.refresh-button:hover {\n  background-color: #1976d2;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\n}\n\n.loading-message,\n.empty-message {\n  margin-top: 16px;\n  color: #757575;\n  font-style: italic;\n  text-align: center;\n  padding: 24px;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n}\n\n.loading-message::before {\n  content: '⏳';\n  margin-right: 8px;\n}\n\n.empty-message::before {\n  content: '📂';\n  margin-right: 8px;\n}\n\n.file-list {\n  list-style: none;\n  padding: 0;\n  margin-top: 16px;\n}\n\n.file-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  margin-bottom: 12px;\n  background-color: white;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.file-item:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.file-item.is-office-document {\n  border-left: 4px solid var(--primary-color);\n}\n\n.file-item.is-selected {\n  background-color: #e8eaf6;\n  border-color: var(--primary-color);\n}\n\n.file-info {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n\n.file-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.file-name {\n  font-weight: 500;\n  color: #333;\n  font-size: 16px;\n  word-break: break-all;\n  margin-bottom: 0;\n  max-width: 70%;\n}\n\n.file-details {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-top: 5px;\n}\n\n.file-size,\n.file-date {\n  font-size: 13px;\n  color: #757575;\n  display: flex;\n  align-items: center;\n}\n\n.file-uploader {\n  margin-top: 24px;\n  margin-right: 40px;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  background-color: #f1f9f5;\n  padding: 4px 10px;\n  border-radius: 12px;\n  border: 1px solid #d1e7dd;\n  box-shadow: 0 2px 4px rgba(46, 204, 113, 0.1);\n  transition: all 0.2s ease;\n}\n\n.file-uploader:hover {\n  background-color: #e8f5e9;\n  box-shadow: 0 3px 6px rgba(46, 204, 113, 0.2);\n  transform: translateY(-1px);\n}\n\n.uploader-label {\n  color: #555;\n  margin-right: 4px;\n  font-weight: 500;\n  display: flex;\n  align-items: center; /* 세로 방향 중앙 정렬 */\n}\n\n.uploader-name {\n  font-weight: bold;\n  color: #2ecc71;\n  text-shadow: 0 0 1px rgba(46, 204, 113, 0.2);\n  padding: 3px 8px;\n  border-radius: 12px;\n  background-color: rgba(46, 204, 113, 0.1);\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center; /* 세로 방향 중앙 정렬 */\n}\n\n.uploader-name.my-upload {\n  color: #e74c3c;\n  background-color: rgba(231, 76, 60, 0.1);\n  font-weight: 700;\n}\n\n.my-upload-badge {\n  font-size: 11px;\n  margin-left: 4px;\n  opacity: 0.8;\n}\n\n.file-size::before {\n  content: '📊';\n  margin-right: 6px;\n  font-size: 12px;\n}\n\n.file-date::before {\n  content: '🕒';\n  margin-right: 6px;\n  font-size: 12px;\n}\n\n.file-expiry {\n  color: #777;\n  font-size: 12px;\n  margin-right: 10px;\n  padding: 2px 6px;\n  border-radius: 4px;\n  background-color: #f8f9fa;\n}\n\n.file-expiry::before {\n  content: '⏱️';\n  margin-right: 6px;\n  font-size: 12px;\n}\n\n.expiry-soon {\n  color: #fff;\n  background-color: #e74c3c;\n  font-weight: 500;\n  animation: pulse 2s infinite;\n}\n\n.file-uploader {\n  display: flex;\n  align-items: center; /* 세로 방향 중앙 정렬 */\n}\n\n.file-uploader::before {\n  content: '👤';\n  margin-right: 6px;\n  font-size: 12px;\n}\n\n.view-count {\n  font-size: 13px;\n  color: var(--primary-color);\n  background-color: #e8eaf6;\n  padding: 4px 10px;\n  border-radius: 16px;\n  display: inline-flex;\n  align-items: center;\n  margin-top: 8px;\n  font-weight: 500;\n}\n\n.view-count::before {\n  content: '👁️';\n  margin-right: 6px;\n  font-size: 12px;\n}\n\n.file-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.download-button,\n.view-button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  display: inline-flex;\n  align-items: center;\n  transition: all 0.3s ease;\n}\n\n.download-button {\n  background-color: var(--info-color);\n  color: var(--text-on-primary);\n}\n\n.download-button::before {\n  content: '⬇️';\n  margin-right: 6px;\n  font-size: 14px;\n}\n\n.download-button:hover {\n  background-color: #1976d2;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\n}\n\n.view-button {\n  background-color: var(--success-color);\n  color: var(--text-on-primary);\n}\n\n.view-button::before {\n  content: '👁️';\n  margin-right: 6px;\n  font-size: 14px;\n}\n\n.view-button:hover {\n  background-color: #388e3c;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\n}\n\n\n\n@keyframes pulse {\n  0% { opacity: 1; }\n  50% { opacity: 0.5; }\n  100% { opacity: 1; }\n}\n\n.notification {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background-color: #2ecc71; /* 더 선명한 녹색 */\n  color: white;\n  padding: 16px 24px;\n  border-radius: 12px;\n  box-shadow: 0 8px 16px rgba(46, 204, 113, 0.3);\n  z-index: 1000;\n  animation: slideIn 0.3s ease-out, fadeOut 0.5s ease-in 2.5s forwards;\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  max-width: 80%;\n  border-left: 5px solid #27ae60; /* 왼쪽 테두리 추가 */\n\n  &.error-notification {\n    background-color: var(--success-color);\n    border-left-color: #c0392b;\n  }\n\n  .file-actions {\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .download-button, .view-button {\n    width: 100%;\n    justify-content: center;\n  }\n}\n\n/* 오류 알림 스타일 */\n.error-notification {\n  background-color: #f44336;\n  border-left: 5px solid #d32f2f;\n  box-shadow: 0 8px 16px rgba(244, 67, 54, 0.3);\n}\n\n.error-notification::before {\n  content: '⚠️';\n  margin-right: 8px;\n}\n\n@media (max-width: 576px) {\n  .file-upload-section, .file-list-section {\n    padding: 16px;\n  }\n\n  .file-list-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n\n  .download-all-button {\n    width: 100%;\n    justify-content: center;\n  }\n\n  /* QR 코드 및 홈 버튼 모바일 스타일 */\n  .qr-code-button, .home-button {\n    padding: 6px 12px;\n    font-size: 12px;\n  }\n\n  .room-buttons {\n    display: flex;\n    gap: 8px;\n  }\n\n  .qr-code-modal-content {\n    width: 95%;\n  }\n\n  .qr-code-large {\n    max-width: 280px;\n    padding: 15px;\n  }\n\n  .qr-code-img-large {\n    max-width: 100%;\n    height: auto;\n  }\n\n  .qr-loading {\n    padding: 15px;\n    font-size: 14px;\n  }\n\n  .qr-error {\n    padding: 15px;\n    font-size: 14px;\n  }\n\n  .qr-url-text {\n    margin-top: 10px;\n    padding: 8px;\n    font-size: 12px;\n  }\n\n  .qr-code-modal-text {\n    font-size: 14px;\n  }\n\n  .qr-username-content {\n    padding: 20px;\n    width: 95%;\n  }\n\n  .qr-username-content h3 {\n    font-size: 20px;\n  }\n\n  .qr-username-input {\n    padding: 10px;\n  }\n\n  .qr-username-button {\n    padding: 10px 20px;\n  }\n\n  .room-header {\n    flex-direction: column;\n    gap: 16px;\n    padding: 16px;\n  }\n\n  .room-info {\n    width: 100%;\n  }\n\n  .user-name-container {\n    width: 100%;\n    margin-top: 12px;\n  }\n\n  .user-name {\n    width: 100%;\n    justify-content: center;\n  }\n\n  .current-user-name {\n    max-width: 180px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .user-name-input {\n    max-width: 100%;\n  }\n\n  .expiry-timer {\n    width: 100%;\n    text-align: center;\n  }\n\n  .drop-zone {\n    width: 80%;\n    max-width: none;\n    padding: 15px 10px;\n  }\n\n  .drop-icon {\n    font-size: 28px;\n  }\n\n  .drop-zone p {\n    font-size: 12px;\n  }\n\n  .selected-file {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .selected-file-name {\n    margin-bottom: 8px;\n    margin-right: 0;\n  }\n\n  .clear-file-button {\n    align-self: flex-end;\n  }\n\n  .upload-form {\n    flex-direction: column;\n  }\n\n  .file-item {\n    margin-bottom: 10px;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .file-info {\n    width: 100%;\n    margin-bottom: 12px;\n  }\n\n  .file-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n  }\n\n  .file-name {\n    max-width: 100%;\n    margin-bottom: 4px;\n  }\n\n  .file-uploader {\n    align-self: flex-start;\n  }\n\n  .file-details {\n    flex-direction: column;\n    gap: 5px;\n  }\n\n  .notification {\n    margin-right: 0;\n    top: 10px;\n    right: 10px;\n    left: 10px;\n    max-width: calc(100% - 20px);\n    align-self: flex-end;\n    padding: 12px 16px;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RoomView.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RoomView.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./RoomView.vue?vue&type=template&id=4363a46c&scoped=true\"\nimport script from \"./RoomView.vue?vue&type=script&lang=js\"\nexport * from \"./RoomView.vue?vue&type=script&lang=js\"\nimport style0 from \"./RoomView.vue?vue&type=style&index=0&id=4363a46c&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4363a46c\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport RoomView from '../views/RoomView.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'HomeView',\n    component: HomeView\n  },\n  {\n    path: '/room/:roomId',\n    name: 'RoomView',\n    component: RoomView\n  },\n  {\n    // 6자리 숫자 경로를 방 ID로 인식\n    path: '/:roomId(\\\\d{6})',\n    name: 'DirectRoomView',\n    component: RoomView\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\nexport default router\n","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})","import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport './assets/main.css'\nimport QRCode from 'qrcode'\n\nVue.config.productionTip = false\n\n// QR 코드 라이브러리를 전역으로 등록\nVue.prototype.$qrcode = QRCode\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfrontend\"] = self[\"webpackChunkfrontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(6702); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","attrs","staticRenderFns","script","component","staticClass","_v","directives","name","rawName","value","roomCode","expression","domProps","on","$event","target","composing","validateInput","isValidCode","createRoom","_s","joinRoomCode","validateJoinInput","joinUserName","isValidJoinCode","joinRoom","error","_e","isLoading","api","axios","create","baseURL","timeout","headers","interceptors","request","use","console","log","method","url","data","response","status","JSON","stringify","message","Promise","reject","created","savedUserName","localStorage","getItem","computed","test","methods","replace","requestData","post","saveRecentRoom","navigateToRoom","showError","trim","setItem","userName","$router","push","path","query","recentRooms","parse","includes","unshift","length","pop","undefined","catch","err","notification","show","class","isError","showQrCode","navigateToHome","expiresIn","formatTime","showQrUserNameModal","qrUserName","ref","type","indexOf","_k","keyCode","key","saveQrUserName","apply","arguments","isDragging","preventDefault","onDragOver","onDragLeave","onDrop","openFilePicker","isUploading","style","width","uploadProgress","staticStyle","handleFileChange","stopPropagation","selectedFile","clearSelectedFile","files","isDownloadingAll","downloadAllFiles","_l","file","_uniqueKey","generateUUID","isOfficeDocument","selectedDocument","filename","originalName","formatFileSize","size","formatDate","uploadedAt","expiresAt","isExpiringSoon","formatExpiryTime","viewCount","previewFile","downloadFile","showQrCodeModal","closeQrCodeModal","isSocketConnected","_m","previewModal","closePreview","isImageFile","previewUrl","isPdfFile","isExcelFile","officeViewerUrl","isOfficeFile","isVideoFile","isAudioFile","isTextFile","textContent","c","r","Math","random","v","toString","apiBaseUrl","process","$route","params","roomId","timerInterval","localTimerInterval","apiUrl","socketUrl","socket","pingInterval","lastPongTime","uploadError","uploadSuccess","userId","Date","now","floor","hasJoinedRoom","isEditingUserName","editUserName","qrCodeUrl","isQrScanned","urlParams","URLSearchParams","window","location","search","userNameFromUrl","get","fromQr","currentUrl","URL","href","searchParams","set","history","replaceState","joinOrCreateRoom","startExpiryTimer","loadFiles","connectSocket","generateQrCode","$nextTick","$refs","qrUserNameInput","focus","beforeDestroy","clearInterval","disconnect","withCredentials","showNotification","createResponse","createError","checkRoomStatus","active","alert","serverExpiresIn","updateTimer","setInterval","seconds","hours","minutes","remainingSeconds","String","padStart","event","uploadFile","dataTransfer","closest","fileInput","click","formData","FormData","append","connected","id","fileName","fileSize","fileType","onUploadProgress","progressEvent","percentCompleted","round","loaded","total","successMessage","uploadedFile","existingFileIndex","findIndex","splice","sort","a","b","errorMessage","filenameMap","Map","forEach","has","uniqueFiles","Array","from","values","map","downloadUrl","responseType","contentType","mimetype","blob","Blob","createObjectURL","link","document","createElement","setAttribute","body","appendChild","setTimeout","revokeObjectURL","removeChild","stack","deleteFile","confirm","delete","fileIndex","f","filesToDownload","downloadedCount","failedCount","i","fileResponse","resolve","fileError","duration","clearTimeout","bytes","k","sizes","parseFloat","pow","toFixed","timestamp","date","toDateString","getHours","getMinutes","yesterday","setDate","getDate","getMonth","expiryDate","remainingTime","ceil","tomorrow","startEditUserName","userNameInput","saveUserName","qrUrl","generateQrCodeInModal","qrcodeLarge","qrCodeElement","innerHTML","loadingElement","className","canvas","$qrcode","toCanvas","margin","color","dark","light","errorCorrectionLevel","urlText","emit","encodedUrl","encodeURIComponent","origin","startsWith","excelTypes","officeTypes","textTypes","io","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","transports","extraHeaders","startPingTimer","attemptNumber","uploaderId","newFile","deletedFile","reason","time","warn","Vue","VueRouter","routes","HomeView","RoomView","router","mode","base","Vuex","state","getters","mutations","actions","modules","config","productionTip","prototype","QRCode","store","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}