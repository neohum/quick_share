{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport axios from 'axios';\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      isValidCode: false,\n      appTitle: process.env.VUE_APP_TITLE || '실시간 코드 공유',\n      apiUrl: process.env.VUE_APP_API_URL || 'http://localhost:3000',\n      recentRooms: []\n    };\n  },\n  mounted() {\n    this.$refs.roomInput.focus();\n    this.loadRecentRooms();\n  },\n  methods: {\n    loadRecentRooms() {\n      const rooms = localStorage.getItem('recentRooms');\n      this.recentRooms = rooms ? JSON.parse(rooms) : [];\n    },\n    saveRecentRoom(roomCode) {\n      const rooms = this.recentRooms.filter(room => room.code !== roomCode);\n      rooms.unshift({\n        code: roomCode,\n        timestamp: Date.now()\n      });\n      this.recentRooms = rooms.slice(0, 5);\n      localStorage.setItem('recentRooms', JSON.stringify(this.recentRooms));\n    },\n    handleInput(e) {\n      this.roomCode = e.target.value.replace(/[^0-9]/g, '');\n      this.isValidCode = /^\\d{6}$/.test(this.roomCode);\n    },\n    async joinRecentRoom(roomCode) {\n      this.roomCode = roomCode;\n      this.isValidCode = true;\n      await this.handleRoom();\n    },\n    async handleRoom() {\n      if (this.roomCode.length === 0) {\n        try {\n          const response = await axios.post(`${this.apiUrl}/api/rooms`);\n          if (response.data && response.data.roomCode) {\n            this.saveRecentRoom(response.data.roomCode);\n            this.$router.push(`/room/${response.data.roomCode}`);\n          }\n        } catch (error) {\n          this.showError('방 생성에 실패했습니다.');\n        }\n      } else if (this.isValidCode) {\n        try {\n          await axios.post(`${this.apiUrl}/api/rooms/${this.roomCode}`);\n          this.saveRecentRoom(this.roomCode);\n          this.$router.push(`/room/${this.roomCode}`);\n        } catch (error) {\n          let message = '알 수 없는 오류가 발생했습니다.';\n          if (error.response) {\n            message = error.response.data.message || '서버 오류가 발생했습니다.';\n          } else if (error.request) {\n            message = '서버에 연결할 수 없습니다.';\n          }\n          this.showError(message);\n        }\n      }\n    },\n    showError(message) {\n      // DaisyUI toast 메시지 표시\n      const toast = document.createElement('div');\n      toast.className = 'alert alert-error';\n      toast.innerHTML = `\n        <div>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\n          <span>${message}</span>\n        </div>\n      `;\n      document.body.appendChild(toast);\n      setTimeout(() => {\n        toast.remove();\n      }, 3000);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","roomCode","isValidCode","appTitle","process","env","VUE_APP_TITLE","apiUrl","VUE_APP_API_URL","recentRooms","mounted","$refs","roomInput","focus","loadRecentRooms","methods","rooms","localStorage","getItem","JSON","parse","saveRecentRoom","filter","room","code","unshift","timestamp","Date","now","slice","setItem","stringify","handleInput","e","target","value","replace","test","joinRecentRoom","handleRoom","length","response","post","$router","push","error","showError","message","request","toast","document","createElement","className","innerHTML","body","appendChild","setTimeout","remove"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-base-200 py-6 flex flex-col justify-center sm:py-12\">\n    <div class=\"relative py-3 sm:max-w-xl sm:mx-auto\">\n      <div class=\"card w-96 bg-base-100 shadow-xl\">\n        <div class=\"card-body\">\n          <h1 class=\"card-title text-2xl font-bold text-center justify-center mb-6\">\n            {{ appTitle }}\n          </h1>\n          \n          <div class=\"form-control w-full\">\n            <div class=\"input-group\">\n              <input \n                type=\"text\" \n                ref=\"roomInput\"\n                v-model=\"roomCode\"\n                @input=\"handleInput\"\n                @keyup.enter=\"handleRoom\"\n                placeholder=\"6자리 방 코드 입력\"\n                maxlength=\"6\"\n                class=\"input input-bordered w-full\"\n              />\n              <button \n                class=\"btn btn-primary\"\n                @click=\"handleRoom\"\n                :disabled=\"roomCode.length > 0 && !isValidCode\"\n              >\n                <span v-if=\"roomCode.length === 0\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\" />\n                  </svg>\n                  새 방\n                </span>\n                <span v-else>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                  </svg>\n                  참여\n                </span>\n              </button>\n            </div>\n          </div>\n\n          <div v-if=\"recentRooms.length > 0\" class=\"mt-6\">\n            <div class=\"divider\">최근 참여한 방</div>\n            <div class=\"flex flex-col gap-2\">\n              <button \n                v-for=\"room in recentRooms\" \n                :key=\"room.code\"\n                @click=\"joinRecentRoom(room.code)\"\n                class=\"btn btn-outline btn-sm\"\n              >\n                {{ room.code }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      isValidCode: false,\n      appTitle: process.env.VUE_APP_TITLE || '실시간 코드 공유',\n      apiUrl: process.env.VUE_APP_API_URL || 'http://localhost:3000',\n      recentRooms: []\n    }\n  },\n  mounted() {\n    this.$refs.roomInput.focus()\n    this.loadRecentRooms()\n  },\n  methods: {\n    loadRecentRooms() {\n      const rooms = localStorage.getItem('recentRooms')\n      this.recentRooms = rooms ? JSON.parse(rooms) : []\n    },\n    saveRecentRoom(roomCode) {\n      const rooms = this.recentRooms.filter(room => room.code !== roomCode)\n      rooms.unshift({ code: roomCode, timestamp: Date.now() })\n      this.recentRooms = rooms.slice(0, 5)\n      localStorage.setItem('recentRooms', JSON.stringify(this.recentRooms))\n    },\n    handleInput(e) {\n      this.roomCode = e.target.value.replace(/[^0-9]/g, '')\n      this.isValidCode = /^\\d{6}$/.test(this.roomCode)\n    },\n    async joinRecentRoom(roomCode) {\n      this.roomCode = roomCode\n      this.isValidCode = true\n      await this.handleRoom()\n    },\n    async handleRoom() {\n      if (this.roomCode.length === 0) {\n        try {\n          const response = await axios.post(`${this.apiUrl}/api/rooms`)\n          if (response.data && response.data.roomCode) {\n            this.saveRecentRoom(response.data.roomCode)\n            this.$router.push(`/room/${response.data.roomCode}`)\n          }\n        } catch (error) {\n          this.showError('방 생성에 실패했습니다.')\n        }\n      } else if (this.isValidCode) {\n        try {\n          await axios.post(`${this.apiUrl}/api/rooms/${this.roomCode}`)\n          this.saveRecentRoom(this.roomCode)\n          this.$router.push(`/room/${this.roomCode}`)\n        } catch (error) {\n          let message = '알 수 없는 오류가 발생했습니다.'\n          if (error.response) {\n            message = error.response.data.message || '서버 오류가 발생했습니다.'\n          } else if (error.request) {\n            message = '서버에 연결할 수 없습니다.'\n          }\n          this.showError(message)\n        }\n      }\n    },\n    showError(message) {\n      // DaisyUI toast 메시지 표시\n      const toast = document.createElement('div')\n      toast.className = 'alert alert-error'\n      toast.innerHTML = `\n        <div>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\n          <span>${message}</span>\n        </div>\n      `\n      document.body.appendChild(toast)\n      setTimeout(() => {\n        toast.remove()\n      }, 3000)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home {\n  padding: 20px;\n  text-align: center;\n}\n\n.room-input {\n  margin-top: 20px;\n}\n\ninput {\n  padding: 8px;\n  margin-right: 10px;\n  font-size: 16px;\n  width: 200px;\n}\n\nbutton {\n  padding: 8px 16px;\n  font-size: 16px;\n  cursor: pointer;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\nbutton:disabled {\n  cursor: not-allowed;\n  opacity: 0.6;\n  background-color: #cccccc;\n}\n\n.recent-rooms {\n  margin-top: 30px;\n}\n\n.recent-rooms ul {\n  list-style: none;\n  padding: 0;\n}\n\n.recent-rooms li {\n  margin: 10px 0;\n}\n\n.recent-rooms a {\n  color: #2c3e50;\n  text-decoration: none;\n  padding: 5px 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.recent-rooms a:hover {\n  background-color: #f5f5f5;\n}\n</style>\n"],"mappings":";;;AA8DA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,WAAA;MACAC,QAAA,EAAAC,OAAA,CAAAC,GAAA,CAAAC,aAAA;MACAC,MAAA,EAAAH,OAAA,CAAAC,GAAA,CAAAG,eAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,KAAA,CAAAC,SAAA,CAAAC,KAAA;IACA,KAAAC,eAAA;EACA;EACAC,OAAA;IACAD,gBAAA;MACA,MAAAE,KAAA,GAAAC,YAAA,CAAAC,OAAA;MACA,KAAAT,WAAA,GAAAO,KAAA,GAAAG,IAAA,CAAAC,KAAA,CAAAJ,KAAA;IACA;IACAK,eAAApB,QAAA;MACA,MAAAe,KAAA,QAAAP,WAAA,CAAAa,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,IAAA,KAAAvB,QAAA;MACAe,KAAA,CAAAS,OAAA;QAAAD,IAAA,EAAAvB,QAAA;QAAAyB,SAAA,EAAAC,IAAA,CAAAC,GAAA;MAAA;MACA,KAAAnB,WAAA,GAAAO,KAAA,CAAAa,KAAA;MACAZ,YAAA,CAAAa,OAAA,gBAAAX,IAAA,CAAAY,SAAA,MAAAtB,WAAA;IACA;IACAuB,YAAAC,CAAA;MACA,KAAAhC,QAAA,GAAAgC,CAAA,CAAAC,MAAA,CAAAC,KAAA,CAAAC,OAAA;MACA,KAAAlC,WAAA,aAAAmC,IAAA,MAAApC,QAAA;IACA;IACA,MAAAqC,eAAArC,QAAA;MACA,KAAAA,QAAA,GAAAA,QAAA;MACA,KAAAC,WAAA;MACA,WAAAqC,UAAA;IACA;IACA,MAAAA,WAAA;MACA,SAAAtC,QAAA,CAAAuC,MAAA;QACA;UACA,MAAAC,QAAA,SAAA3C,KAAA,CAAA4C,IAAA,SAAAnC,MAAA;UACA,IAAAkC,QAAA,CAAAzC,IAAA,IAAAyC,QAAA,CAAAzC,IAAA,CAAAC,QAAA;YACA,KAAAoB,cAAA,CAAAoB,QAAA,CAAAzC,IAAA,CAAAC,QAAA;YACA,KAAA0C,OAAA,CAAAC,IAAA,UAAAH,QAAA,CAAAzC,IAAA,CAAAC,QAAA;UACA;QACA,SAAA4C,KAAA;UACA,KAAAC,SAAA;QACA;MACA,gBAAA5C,WAAA;QACA;UACA,MAAAJ,KAAA,CAAA4C,IAAA,SAAAnC,MAAA,mBAAAN,QAAA;UACA,KAAAoB,cAAA,MAAApB,QAAA;UACA,KAAA0C,OAAA,CAAAC,IAAA,eAAA3C,QAAA;QACA,SAAA4C,KAAA;UACA,IAAAE,OAAA;UACA,IAAAF,KAAA,CAAAJ,QAAA;YACAM,OAAA,GAAAF,KAAA,CAAAJ,QAAA,CAAAzC,IAAA,CAAA+C,OAAA;UACA,WAAAF,KAAA,CAAAG,OAAA;YACAD,OAAA;UACA;UACA,KAAAD,SAAA,CAAAC,OAAA;QACA;MACA;IACA;IACAD,UAAAC,OAAA;MACA;MACA,MAAAE,KAAA,GAAAC,QAAA,CAAAC,aAAA;MACAF,KAAA,CAAAG,SAAA;MACAH,KAAA,CAAAI,SAAA;AACA;AACA;AACA,kBAAAN,OAAA;AACA;AACA;MACAG,QAAA,CAAAI,IAAA,CAAAC,WAAA,CAAAN,KAAA;MACAO,UAAA;QACAP,KAAA,CAAAQ,MAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}