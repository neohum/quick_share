{"ast":null,"code":"import io from 'socket.io-client';\nimport axios from 'axios';\nexport default {\n  name: 'Room',\n  data() {\n    return {\n      socket: null,\n      content: '',\n      roomId: this.$route.params.roomId,\n      debounceTimeout: null\n    };\n  },\n  async created() {\n    this.socket = io('http://localhost:3000');\n    this.socket.emit('joinRoom', this.roomId);\n    this.socket.on('fileUpdate', data => {\n      this.content = data.content;\n    });\n\n    // 초기 파일 내용 로드\n    try {\n      const response = await axios.get(`http://localhost:3000/api/rooms/${this.roomId}/files`);\n      this.content = response.data.content || '';\n    } catch (error) {\n      console.error('Failed to load file:', error);\n    }\n  },\n  methods: {\n    handleInput() {\n      clearTimeout(this.debounceTimeout);\n      this.debounceTimeout = setTimeout(() => {\n        this.socket.emit('fileChange', {\n          roomId: this.roomId,\n          content: this.content\n        });\n      }, 500);\n    }\n  },\n  beforeDestroy() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n};","map":{"version":3,"names":["io","axios","name","data","socket","content","roomId","$route","params","debounceTimeout","created","emit","on","response","get","error","console","methods","handleInput","clearTimeout","setTimeout","beforeDestroy","disconnect"],"sources":["src/views/Room.vue"],"sourcesContent":["<template>\n  <div class=\"room\">\n    <div class=\"editor-container\">\n      <textarea\n        v-model=\"content\"\n        @input=\"handleInput\"\n        placeholder=\"Enter your text here...\"\n      ></textarea>\n    </div>\n    <div class=\"room-info\">\n      Room ID: {{ roomId }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport io from 'socket.io-client';\nimport axios from 'axios';\n\nexport default {\n  name: 'Room',\n  data() {\n    return {\n      socket: null,\n      content: '',\n      roomId: this.$route.params.roomId,\n      debounceTimeout: null\n    }\n  },\n  async created() {\n    this.socket = io('http://localhost:3000');\n    this.socket.emit('joinRoom', this.roomId);\n    \n    this.socket.on('fileUpdate', (data) => {\n      this.content = data.content;\n    });\n\n    // 초기 파일 내용 로드\n    try {\n      const response = await axios.get(`http://localhost:3000/api/rooms/${this.roomId}/files`);\n      this.content = response.data.content || '';\n    } catch (error) {\n      console.error('Failed to load file:', error);\n    }\n  },\n  methods: {\n    handleInput() {\n      clearTimeout(this.debounceTimeout);\n      this.debounceTimeout = setTimeout(() => {\n        this.socket.emit('fileChange', {\n          roomId: this.roomId,\n          content: this.content\n        });\n      }, 500);\n    }\n  },\n  beforeDestroy() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n}\n</script>\n\n<style scoped>\n.room {\n  padding: 20px;\n}\n.editor-container {\n  margin-bottom: 20px;\n}\ntextarea {\n  width: 100%;\n  height: 400px;\n  padding: 10px;\n}\n.room-info {\n  font-size: 14px;\n  color: #666;\n}\n</style>"],"mappings":"AAgBA,OAAAA,EAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,OAAA;MACAC,MAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,MAAA;MACAG,eAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,KAAAN,MAAA,GAAAJ,EAAA;IACA,KAAAI,MAAA,CAAAO,IAAA,kBAAAL,MAAA;IAEA,KAAAF,MAAA,CAAAQ,EAAA,eAAAT,IAAA;MACA,KAAAE,OAAA,GAAAF,IAAA,CAAAE,OAAA;IACA;;IAEA;IACA;MACA,MAAAQ,QAAA,SAAAZ,KAAA,CAAAa,GAAA,yCAAAR,MAAA;MACA,KAAAD,OAAA,GAAAQ,QAAA,CAAAV,IAAA,CAAAE,OAAA;IACA,SAAAU,KAAA;MACAC,OAAA,CAAAD,KAAA,yBAAAA,KAAA;IACA;EACA;EACAE,OAAA;IACAC,YAAA;MACAC,YAAA,MAAAV,eAAA;MACA,KAAAA,eAAA,GAAAW,UAAA;QACA,KAAAhB,MAAA,CAAAO,IAAA;UACAL,MAAA,OAAAA,MAAA;UACAD,OAAA,OAAAA;QACA;MACA;IACA;EACA;EACAgB,cAAA;IACA,SAAAjB,MAAA;MACA,KAAAA,MAAA,CAAAkB,UAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}