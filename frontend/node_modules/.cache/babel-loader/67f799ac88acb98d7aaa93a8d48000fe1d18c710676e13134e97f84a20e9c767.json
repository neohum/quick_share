{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport io from 'socket.io-client';\nexport default {\n  name: 'RoomView',\n  data() {\n    return {\n      roomId: this.$route.params.roomId,\n      files: [],\n      currentFile: null,\n      content: '',\n      socket: null,\n      debounceTimeout: null,\n      newFilename: ''\n    };\n  },\n  async created() {\n    if (!/^\\d{6}$/.test(this.roomId)) {\n      this.$router.push('/');\n      return;\n    }\n    try {\n      await this.loadFiles();\n      this.initializeSocket();\n    } catch (error) {\n      console.error('Room not found:', error);\n      this.$router.push('/');\n    }\n  },\n  methods: {\n    async loadFiles() {\n      const response = await axios.get(`${process.env.VUE_APP_API_URL}/api/rooms/${this.roomId}/files`);\n      this.files = response.data.files;\n    },\n    initializeSocket() {\n      this.socket = io(process.env.VUE_APP_SOCKET_URL);\n      this.socket.emit('joinRoom', this.roomId);\n      this.socket.on('fileUpdate', ({\n        filename,\n        content\n      }) => {\n        if (filename === this.currentFile) {\n          this.content = content;\n        }\n        this.loadFiles(); // 파일 목록 새로고침\n      });\n    },\n    async selectFile(filename) {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_URL}/api/rooms/${this.roomId}/files/${filename}`);\n        this.currentFile = filename;\n        this.content = response.data.content;\n      } catch (error) {\n        console.error('Error loading file:', error);\n      }\n    },\n    async createFile() {\n      if (!this.newFilename) return;\n      try {\n        await axios.post(`${process.env.VUE_APP_API_URL}/api/rooms/${this.roomId}/files`, {\n          filename: this.newFilename,\n          content: ''\n        });\n        this.newFilename = '';\n        await this.loadFiles();\n        await this.selectFile(this.newFilename);\n      } catch (error) {\n        console.error('Error creating file:', error);\n      }\n    },\n    handleInput() {\n      if (!this.currentFile) return;\n      clearTimeout(this.debounceTimeout);\n      this.debounceTimeout = setTimeout(() => {\n        this.socket.emit('fileChange', {\n          roomId: this.roomId,\n          filename: this.currentFile,\n          content: this.content\n        });\n      }, 500);\n    },\n    formatTime(timestamp) {\n      const date = new Date(timestamp);\n      return date.toLocaleTimeString();\n    }\n  },\n  beforeDestroy() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n};","map":{"version":3,"names":["axios","io","name","data","roomId","$route","params","files","currentFile","content","socket","debounceTimeout","newFilename","created","test","$router","push","loadFiles","initializeSocket","error","console","methods","response","get","process","env","VUE_APP_API_URL","VUE_APP_SOCKET_URL","emit","on","filename","selectFile","createFile","post","handleInput","clearTimeout","setTimeout","formatTime","timestamp","date","Date","toLocaleTimeString","beforeDestroy","disconnect"],"sources":["src/views/Room.vue"],"sourcesContent":["<template>\n  <div class=\"room\">\n    <div class=\"sidebar\">\n      <div class=\"file-list\">\n        <h3>Files</h3>\n        <div class=\"file-actions\">\n          <input \n            v-model=\"newFilename\"\n            placeholder=\"New file name\"\n            @keyup.enter=\"createFile\"\n          />\n          <button @click=\"createFile\" :disabled=\"!newFilename\">Create</button>\n        </div>\n        <ul>\n          <li \n            v-for=\"file in files\" \n            :key=\"file.filename\"\n            :class=\"{ active: currentFile === file.filename }\"\n            @click=\"selectFile(file.filename)\"\n          >\n            {{ file.filename }}\n            <span class=\"file-time\">{{ formatTime(file.updatedAt) }}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n    \n    <div class=\"editor\">\n      <textarea\n        v-if=\"currentFile\"\n        v-model=\"content\"\n        @input=\"handleInput\"\n        placeholder=\"Start typing...\"\n      ></textarea>\n      <div v-else class=\"no-file\">\n        Select or create a file to start editing\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport io from 'socket.io-client';\n\nexport default {\n  name: 'RoomView',\n  data() {\n    return {\n      roomId: this.$route.params.roomId,\n      files: [],\n      currentFile: null,\n      content: '',\n      socket: null,\n      debounceTimeout: null,\n      newFilename: ''\n    }\n  },\n  async created() {\n    if (!/^\\d{6}$/.test(this.roomId)) {\n      this.$router.push('/');\n      return;\n    }\n\n    try {\n      await this.loadFiles();\n      this.initializeSocket();\n    } catch (error) {\n      console.error('Room not found:', error);\n      this.$router.push('/');\n    }\n  },\n  methods: {\n    async loadFiles() {\n      const response = await axios.get(\n        `${process.env.VUE_APP_API_URL}/api/rooms/${this.roomId}/files`\n      );\n      this.files = response.data.files;\n    },\n    initializeSocket() {\n      this.socket = io(process.env.VUE_APP_SOCKET_URL);\n      this.socket.emit('joinRoom', this.roomId);\n      \n      this.socket.on('fileUpdate', ({ filename, content }) => {\n        if (filename === this.currentFile) {\n          this.content = content;\n        }\n        this.loadFiles(); // 파일 목록 새로고침\n      });\n    },\n    async selectFile(filename) {\n      try {\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_URL}/api/rooms/${this.roomId}/files/${filename}`\n        );\n        this.currentFile = filename;\n        this.content = response.data.content;\n      } catch (error) {\n        console.error('Error loading file:', error);\n      }\n    },\n    async createFile() {\n      if (!this.newFilename) return;\n      \n      try {\n        await axios.post(\n          `${process.env.VUE_APP_API_URL}/api/rooms/${this.roomId}/files`,\n          {\n            filename: this.newFilename,\n            content: ''\n          }\n        );\n        this.newFilename = '';\n        await this.loadFiles();\n        await this.selectFile(this.newFilename);\n      } catch (error) {\n        console.error('Error creating file:', error);\n      }\n    },\n    handleInput() {\n      if (!this.currentFile) return;\n      \n      clearTimeout(this.debounceTimeout);\n      this.debounceTimeout = setTimeout(() => {\n        this.socket.emit('fileChange', {\n          roomId: this.roomId,\n          filename: this.currentFile,\n          content: this.content\n        });\n      }, 500);\n    },\n    formatTime(timestamp) {\n      const date = new Date(timestamp);\n      return date.toLocaleTimeString();\n    }\n  },\n  beforeDestroy() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n}\n</script>\n\n<style scoped>\n.room {\n  display: flex;\n  height: 100vh;\n}\n\n.sidebar {\n  width: 250px;\n  background: #f5f5f5;\n  border-right: 1px solid #ddd;\n  padding: 1rem;\n}\n\n.file-list {\n  h3 {\n    margin-top: 0;\n  }\n  \n  ul {\n    list-style: none;\n    padding: 0;\n  }\n  \n  li {\n    padding: 0.5rem;\n    cursor: pointer;\n    border-radius: 4px;\n    margin-bottom: 0.25rem;\n    \n    &:hover {\n      background: #eee;\n    }\n    \n    &.active {\n      background: #e0e0e0;\n    }\n  }\n}\n\n.file-actions {\n  margin-bottom: 1rem;\n  display: flex;\n  gap: 0.5rem;\n  \n  input {\n    flex: 1;\n    padding: 0.5rem;\n  }\n  \n  button {\n    padding: 0.5rem 1rem;\n  }\n}\n\n.editor {\n  flex: 1;\n  padding: 1rem;\n  \n  textarea {\n    width: 100%;\n    height: 100%;\n    border: 1px solid #ddd;\n    padding: 1rem;\n    resize: none;\n    font-family: monospace;\n  }\n}\n\n.no-file {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  color: #666;\n}\n\n.file-time {\n  font-size: 0.8em;\n  color: #666;\n  margin-left: 0.5rem;\n}\n</style>\n"],"mappings":";AA0CA,OAAAA,KAAA;AACA,OAAAC,EAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,MAAA;MACAG,KAAA;MACAC,WAAA;MACAC,OAAA;MACAC,MAAA;MACAC,eAAA;MACAC,WAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,eAAAC,IAAA,MAAAV,MAAA;MACA,KAAAW,OAAA,CAAAC,IAAA;MACA;IACA;IAEA;MACA,WAAAC,SAAA;MACA,KAAAC,gBAAA;IACA,SAAAC,KAAA;MACAC,OAAA,CAAAD,KAAA,oBAAAA,KAAA;MACA,KAAAJ,OAAA,CAAAC,IAAA;IACA;EACA;EACAK,OAAA;IACA,MAAAJ,UAAA;MACA,MAAAK,QAAA,SAAAtB,KAAA,CAAAuB,GAAA,CACA,GAAAC,OAAA,CAAAC,GAAA,CAAAC,eAAA,mBAAAtB,MAAA,QACA;MACA,KAAAG,KAAA,GAAAe,QAAA,CAAAnB,IAAA,CAAAI,KAAA;IACA;IACAW,iBAAA;MACA,KAAAR,MAAA,GAAAT,EAAA,CAAAuB,OAAA,CAAAC,GAAA,CAAAE,kBAAA;MACA,KAAAjB,MAAA,CAAAkB,IAAA,kBAAAxB,MAAA;MAEA,KAAAM,MAAA,CAAAmB,EAAA;QAAAC,QAAA;QAAArB;MAAA;QACA,IAAAqB,QAAA,UAAAtB,WAAA;UACA,KAAAC,OAAA,GAAAA,OAAA;QACA;QACA,KAAAQ,SAAA;MACA;IACA;IACA,MAAAc,WAAAD,QAAA;MACA;QACA,MAAAR,QAAA,SAAAtB,KAAA,CAAAuB,GAAA,CACA,GAAAC,OAAA,CAAAC,GAAA,CAAAC,eAAA,mBAAAtB,MAAA,UAAA0B,QAAA,EACA;QACA,KAAAtB,WAAA,GAAAsB,QAAA;QACA,KAAArB,OAAA,GAAAa,QAAA,CAAAnB,IAAA,CAAAM,OAAA;MACA,SAAAU,KAAA;QACAC,OAAA,CAAAD,KAAA,wBAAAA,KAAA;MACA;IACA;IACA,MAAAa,WAAA;MACA,UAAApB,WAAA;MAEA;QACA,MAAAZ,KAAA,CAAAiC,IAAA,CACA,GAAAT,OAAA,CAAAC,GAAA,CAAAC,eAAA,mBAAAtB,MAAA,UACA;UACA0B,QAAA,OAAAlB,WAAA;UACAH,OAAA;QACA,CACA;QACA,KAAAG,WAAA;QACA,WAAAK,SAAA;QACA,WAAAc,UAAA,MAAAnB,WAAA;MACA,SAAAO,KAAA;QACAC,OAAA,CAAAD,KAAA,yBAAAA,KAAA;MACA;IACA;IACAe,YAAA;MACA,UAAA1B,WAAA;MAEA2B,YAAA,MAAAxB,eAAA;MACA,KAAAA,eAAA,GAAAyB,UAAA;QACA,KAAA1B,MAAA,CAAAkB,IAAA;UACAxB,MAAA,OAAAA,MAAA;UACA0B,QAAA,OAAAtB,WAAA;UACAC,OAAA,OAAAA;QACA;MACA;IACA;IACA4B,WAAAC,SAAA;MACA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,SAAA;MACA,OAAAC,IAAA,CAAAE,kBAAA;IACA;EACA;EACAC,cAAA;IACA,SAAAhC,MAAA;MACA,KAAAA,MAAA,CAAAiC,UAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}