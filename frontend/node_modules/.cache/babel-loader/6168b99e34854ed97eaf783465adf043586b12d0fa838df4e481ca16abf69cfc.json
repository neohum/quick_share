{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport axios from 'axios';\nimport storage from '@/utils/storage';\nconst RECENT_ROOMS_KEY = 'recentRooms';\nconst MAX_RECENT_ROOMS = 5;\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      isValidCode: false,\n      appTitle: process.env.VUE_APP_TITLE || '실시간 코드 공유',\n      apiUrl: process.env.VUE_APP_API_URL || 'http://localhost:3000',\n      recentRooms: []\n    };\n  },\n  mounted() {\n    this.$refs.roomInput.focus();\n    this.loadRecentRooms();\n  },\n  methods: {\n    loadRecentRooms() {\n      try {\n        const rooms = storage.get(RECENT_ROOMS_KEY);\n        this.recentRooms = rooms ? JSON.parse(rooms) : [];\n      } catch (e) {\n        console.warn('Failed to load recent rooms:', e);\n        this.recentRooms = [];\n      }\n    },\n    saveRecentRoom(roomCode) {\n      try {\n        const rooms = this.recentRooms.filter(room => room.code !== roomCode);\n        rooms.unshift({\n          code: roomCode,\n          timestamp: Date.now()\n        });\n        this.recentRooms = rooms.slice(0, MAX_RECENT_ROOMS);\n        storage.set(RECENT_ROOMS_KEY, JSON.stringify(this.recentRooms));\n      } catch (e) {\n        console.warn('Failed to save recent room:', e);\n      }\n    },\n    handleInput(e) {\n      this.roomCode = e.target.value.replace(/[^0-9]/g, '');\n      this.isValidCode = /^\\d{6}$/.test(this.roomCode);\n    },\n    async joinRecentRoom(roomCode) {\n      this.roomCode = roomCode;\n      this.isValidCode = true;\n      await this.handleRoom();\n    },\n    async handleRoom() {\n      if (this.roomCode.length === 0) {\n        try {\n          const response = await axios.post(`${this.apiUrl}/api/rooms`);\n          if (response.data && response.data.roomCode) {\n            this.roomCode = response.data.roomCode;\n            this.isValidCode = true;\n            this.saveRecentRoom(this.roomCode);\n            this.$router.push(`/room/${this.roomCode}`);\n          } else {\n            throw new Error('Invalid response format');\n          }\n        } catch (error) {\n          console.error('Failed to create room:', error);\n          alert('방 생성에 실패했습니다. 다시 시도해주세요.');\n          return;\n        }\n      } else if (!this.isValidCode) {\n        return;\n      } else {\n        try {\n          await axios.post(`${this.apiUrl}/api/rooms/${this.roomCode}`);\n          this.saveRecentRoom(this.roomCode);\n          this.$router.push(`/room/${this.roomCode}`);\n        } catch (error) {\n          if (error.response) {\n            console.error('Server error:', error.response.data);\n            alert(error.response.data.message || '서버 오류가 발생했습니다.');\n          } else if (error.request) {\n            console.error('Network error:', error);\n            alert('서버에 연결할 수 없습니다. 네트워크 연결을 확인해주세요.');\n          } else {\n            console.error('Error:', error);\n            alert('알 수 없는 오류가 발생했습니다.');\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","storage","RECENT_ROOMS_KEY","MAX_RECENT_ROOMS","name","data","roomCode","isValidCode","appTitle","process","env","VUE_APP_TITLE","apiUrl","VUE_APP_API_URL","recentRooms","mounted","$refs","roomInput","focus","loadRecentRooms","methods","rooms","get","JSON","parse","e","console","warn","saveRecentRoom","filter","room","code","unshift","timestamp","Date","now","slice","set","stringify","handleInput","target","value","replace","test","joinRecentRoom","handleRoom","length","response","post","$router","push","Error","error","alert","message","request"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <h1>{{ appTitle }}</h1>\n    <div class=\"room-input\">\n      <input\n        ref=\"roomInput\"\n        type=\"text\"\n        v-model=\"roomCode\"\n        @input=\"handleInput\"\n        @keyup.enter=\"handleRoom\"\n        placeholder=\"6자리 방 코드 입력\"\n        maxlength=\"6\"\n      >\n      <button \n        @click=\"handleRoom\" \n        :disabled=\"roomCode.length > 0 && !isValidCode\"\n      >\n        {{ roomCode.length === 0 ? '새 방 만들기' : '방 참여하기' }}\n      </button>\n    </div>\n    <div v-if=\"recentRooms.length > 0\" class=\"recent-rooms\">\n      <h3>최근 참여한 방</h3>\n      <ul>\n        <li v-for=\"room in recentRooms\" :key=\"room.code\">\n          <a @click.prevent=\"joinRecentRoom(room.code)\" href=\"#\">\n            {{ room.code }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport storage from '@/utils/storage'\n\nconst RECENT_ROOMS_KEY = 'recentRooms'\nconst MAX_RECENT_ROOMS = 5\n\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      isValidCode: false,\n      appTitle: process.env.VUE_APP_TITLE || '실시간 코드 공유',\n      apiUrl: process.env.VUE_APP_API_URL || 'http://localhost:3000',\n      recentRooms: []\n    }\n  },\n  mounted() {\n    this.$refs.roomInput.focus()\n    this.loadRecentRooms()\n  },\n  methods: {\n    loadRecentRooms() {\n      try {\n        const rooms = storage.get(RECENT_ROOMS_KEY)\n        this.recentRooms = rooms ? JSON.parse(rooms) : []\n      } catch (e) {\n        console.warn('Failed to load recent rooms:', e)\n        this.recentRooms = []\n      }\n    },\n    saveRecentRoom(roomCode) {\n      try {\n        const rooms = this.recentRooms.filter(room => room.code !== roomCode)\n        rooms.unshift({ code: roomCode, timestamp: Date.now() })\n        this.recentRooms = rooms.slice(0, MAX_RECENT_ROOMS)\n        storage.set(RECENT_ROOMS_KEY, JSON.stringify(this.recentRooms))\n      } catch (e) {\n        console.warn('Failed to save recent room:', e)\n      }\n    },\n    handleInput(e) {\n      this.roomCode = e.target.value.replace(/[^0-9]/g, '')\n      this.isValidCode = /^\\d{6}$/.test(this.roomCode)\n    },\n    async joinRecentRoom(roomCode) {\n      this.roomCode = roomCode\n      this.isValidCode = true\n      await this.handleRoom()\n    },\n    async handleRoom() {\n      if (this.roomCode.length === 0) {\n        try {\n          const response = await axios.post(`${this.apiUrl}/api/rooms`)\n          if (response.data && response.data.roomCode) {\n            this.roomCode = response.data.roomCode\n            this.isValidCode = true\n            this.saveRecentRoom(this.roomCode)\n            this.$router.push(`/room/${this.roomCode}`)\n          } else {\n            throw new Error('Invalid response format')\n          }\n        } catch (error) {\n          console.error('Failed to create room:', error)\n          alert('방 생성에 실패했습니다. 다시 시도해주세요.')\n          return\n        }\n      } else if (!this.isValidCode) {\n        return\n      } else {\n        try {\n          await axios.post(`${this.apiUrl}/api/rooms/${this.roomCode}`)\n          this.saveRecentRoom(this.roomCode)\n          this.$router.push(`/room/${this.roomCode}`)\n        } catch (error) {\n          if (error.response) {\n            console.error('Server error:', error.response.data)\n            alert(error.response.data.message || '서버 오류가 발생했습니다.')\n          } else if (error.request) {\n            console.error('Network error:', error)\n            alert('서버에 연결할 수 없습니다. 네트워크 연결을 확인해주세요.')\n          } else {\n            console.error('Error:', error)\n            alert('알 수 없는 오류가 발생했습니다.')\n          }\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home {\n  padding: 20px;\n  text-align: center;\n}\n\n.room-input {\n  margin-top: 20px;\n}\n\ninput {\n  padding: 8px;\n  margin-right: 10px;\n  font-size: 16px;\n  width: 200px;\n}\n\nbutton {\n  padding: 8px 16px;\n  font-size: 16px;\n  cursor: pointer;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\nbutton:disabled {\n  cursor: not-allowed;\n  opacity: 0.6;\n  background-color: #cccccc;\n}\n\n.recent-rooms {\n  margin-top: 30px;\n}\n\n.recent-rooms ul {\n  list-style: none;\n  padding: 0;\n}\n\n.recent-rooms li {\n  margin: 10px 0;\n}\n\n.recent-rooms a {\n  color: #2c3e50;\n  text-decoration: none;\n  padding: 5px 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.recent-rooms a:hover {\n  background-color: #f5f5f5;\n}\n</style>\n"],"mappings":";;;AAkCA,OAAAA,KAAA;AACA,OAAAC,OAAA;AAEA,MAAAC,gBAAA;AACA,MAAAC,gBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,WAAA;MACAC,QAAA,EAAAC,OAAA,CAAAC,GAAA,CAAAC,aAAA;MACAC,MAAA,EAAAH,OAAA,CAAAC,GAAA,CAAAG,eAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,KAAA,CAAAC,SAAA,CAAAC,KAAA;IACA,KAAAC,eAAA;EACA;EACAC,OAAA;IACAD,gBAAA;MACA;QACA,MAAAE,KAAA,GAAApB,OAAA,CAAAqB,GAAA,CAAApB,gBAAA;QACA,KAAAY,WAAA,GAAAO,KAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAH,KAAA;MACA,SAAAI,CAAA;QACAC,OAAA,CAAAC,IAAA,iCAAAF,CAAA;QACA,KAAAX,WAAA;MACA;IACA;IACAc,eAAAtB,QAAA;MACA;QACA,MAAAe,KAAA,QAAAP,WAAA,CAAAe,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,IAAA,KAAAzB,QAAA;QACAe,KAAA,CAAAW,OAAA;UAAAD,IAAA,EAAAzB,QAAA;UAAA2B,SAAA,EAAAC,IAAA,CAAAC,GAAA;QAAA;QACA,KAAArB,WAAA,GAAAO,KAAA,CAAAe,KAAA,IAAAjC,gBAAA;QACAF,OAAA,CAAAoC,GAAA,CAAAnC,gBAAA,EAAAqB,IAAA,CAAAe,SAAA,MAAAxB,WAAA;MACA,SAAAW,CAAA;QACAC,OAAA,CAAAC,IAAA,gCAAAF,CAAA;MACA;IACA;IACAc,YAAAd,CAAA;MACA,KAAAnB,QAAA,GAAAmB,CAAA,CAAAe,MAAA,CAAAC,KAAA,CAAAC,OAAA;MACA,KAAAnC,WAAA,aAAAoC,IAAA,MAAArC,QAAA;IACA;IACA,MAAAsC,eAAAtC,QAAA;MACA,KAAAA,QAAA,GAAAA,QAAA;MACA,KAAAC,WAAA;MACA,WAAAsC,UAAA;IACA;IACA,MAAAA,WAAA;MACA,SAAAvC,QAAA,CAAAwC,MAAA;QACA;UACA,MAAAC,QAAA,SAAA/C,KAAA,CAAAgD,IAAA,SAAApC,MAAA;UACA,IAAAmC,QAAA,CAAA1C,IAAA,IAAA0C,QAAA,CAAA1C,IAAA,CAAAC,QAAA;YACA,KAAAA,QAAA,GAAAyC,QAAA,CAAA1C,IAAA,CAAAC,QAAA;YACA,KAAAC,WAAA;YACA,KAAAqB,cAAA,MAAAtB,QAAA;YACA,KAAA2C,OAAA,CAAAC,IAAA,eAAA5C,QAAA;UACA;YACA,UAAA6C,KAAA;UACA;QACA,SAAAC,KAAA;UACA1B,OAAA,CAAA0B,KAAA,2BAAAA,KAAA;UACAC,KAAA;UACA;QACA;MACA,iBAAA9C,WAAA;QACA;MACA;QACA;UACA,MAAAP,KAAA,CAAAgD,IAAA,SAAApC,MAAA,mBAAAN,QAAA;UACA,KAAAsB,cAAA,MAAAtB,QAAA;UACA,KAAA2C,OAAA,CAAAC,IAAA,eAAA5C,QAAA;QACA,SAAA8C,KAAA;UACA,IAAAA,KAAA,CAAAL,QAAA;YACArB,OAAA,CAAA0B,KAAA,kBAAAA,KAAA,CAAAL,QAAA,CAAA1C,IAAA;YACAgD,KAAA,CAAAD,KAAA,CAAAL,QAAA,CAAA1C,IAAA,CAAAiD,OAAA;UACA,WAAAF,KAAA,CAAAG,OAAA;YACA7B,OAAA,CAAA0B,KAAA,mBAAAA,KAAA;YACAC,KAAA;UACA;YACA3B,OAAA,CAAA0B,KAAA,WAAAA,KAAA;YACAC,KAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}