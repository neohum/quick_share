{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      isValidCode: false,\n      appTitle: process.env.VUE_APP_TITLE || '실시간 코드 공유'\n    };\n  },\n  created() {\n    // URL에서 방 코드 파라미터 확인\n    const pathMatch = window.location.pathname.match(/\\/room\\/(\\d{6})/);\n    if (pathMatch) {\n      this.roomCode = pathMatch[1];\n      this.handleInput({\n        target: {\n          value: this.roomCode\n        }\n      });\n      this.handleRoom();\n    }\n  },\n  mounted() {\n    // 컴포넌트가 마운트되면 입력 필드에 포커스\n    this.$refs.roomInput.focus();\n  },\n  methods: {\n    handleInput(e) {\n      // 숫자만 입력 가능\n      this.roomCode = e.target.value.replace(/[^0-9]/g, '');\n      this.isValidCode = /^\\d{6}$/.test(this.roomCode);\n    },\n    async handleRoom() {\n      if (this.roomCode.length === 0) {\n        // 새 방 생성 - 6자리 랜덤 숫자 생성\n        this.roomCode = Math.floor(100000 + Math.random() * 900000).toString();\n        this.isValidCode = true;\n      } else if (!this.isValidCode) {\n        return;\n      }\n      const apiUrl = process.env.VUE_APP_API_URL || 'http://localhost:8080';\n      try {\n        // 먼저 방이 존재하는지 확인\n        try {\n          const response = await axios.get(`${apiUrl}/api/rooms/${this.roomCode}`);\n          console.log('Room exists:', response.data);\n          this.$router.push(`/room/${this.roomCode}`);\n        } catch (error) {\n          if (error.response && error.response.status === 404) {\n            // 방이 존재하지 않으면 새로 생성\n            const createResponse = await axios.post(`${apiUrl}/api/rooms/${this.roomCode}`);\n            console.log('Room created:', createResponse.data);\n            this.$router.push(`/room/${this.roomCode}`);\n          } else {\n            throw error;\n          }\n        }\n      } catch (error) {\n        console.error('Room operation failed:', error);\n        alert('방 생성/입장에 실패했습니다. 다시 시도해주세요.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","roomCode","isValidCode","appTitle","process","env","VUE_APP_TITLE","created","pathMatch","window","location","pathname","match","handleInput","target","value","handleRoom","mounted","$refs","roomInput","focus","methods","e","replace","test","length","Math","floor","random","toString","apiUrl","VUE_APP_API_URL","response","get","console","log","$router","push","error","status","createResponse","post","alert"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"container\">\n      <h1>{{ appTitle }}</h1>\n      \n      <div class=\"room-input\">\n        <input \n          type=\"text\" \n          v-model=\"roomCode\"\n          @input=\"handleInput\"\n          @keyup.enter=\"handleRoom\"\n          placeholder=\"6자리 방 코드 입력\"\n          maxlength=\"6\"\n          ref=\"roomInput\"\n          autocomplete=\"off\"\n        />\n        <button \n          @click=\"handleRoom\" \n          :disabled=\"!isValidCode && roomCode.length > 0\"\n          class=\"primary-button\"\n        >\n          {{ roomCode.length === 0 ? '새 방 만들기' : '입장하기' }}\n        </button>\n      </div>\n      \n      <p class=\"hint\" v-if=\"roomCode.length > 0 && !isValidCode\">\n        6자리 숫자를 입력해주세요\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      isValidCode: false,\n      appTitle: process.env.VUE_APP_TITLE || '실시간 코드 공유'\n    }\n  },\n  created() {\n    // URL에서 방 코드 파라미터 확인\n    const pathMatch = window.location.pathname.match(/\\/room\\/(\\d{6})/);\n    if (pathMatch) {\n      this.roomCode = pathMatch[1];\n      this.handleInput({ target: { value: this.roomCode }});\n      this.handleRoom();\n    }\n  },\n  mounted() {\n    // 컴포넌트가 마운트되면 입력 필드에 포커스\n    this.$refs.roomInput.focus();\n  },\n  methods: {\n    handleInput(e) {\n      // 숫자만 입력 가능\n      this.roomCode = e.target.value.replace(/[^0-9]/g, '');\n      this.isValidCode = /^\\d{6}$/.test(this.roomCode);\n    },\n    async handleRoom() {\n      if (this.roomCode.length === 0) {\n        // 새 방 생성 - 6자리 랜덤 숫자 생성\n        this.roomCode = Math.floor(100000 + Math.random() * 900000).toString();\n        this.isValidCode = true;\n      } else if (!this.isValidCode) {\n        return;\n      }\n      \n      const apiUrl = process.env.VUE_APP_API_URL || 'http://localhost:8080';\n      \n      try {\n        // 먼저 방이 존재하는지 확인\n        try {\n          const response = await axios.get(`${apiUrl}/api/rooms/${this.roomCode}`);\n          console.log('Room exists:', response.data);\n          this.$router.push(`/room/${this.roomCode}`);\n        } catch (error) {\n          if (error.response && error.response.status === 404) {\n            // 방이 존재하지 않으면 새로 생성\n            const createResponse = await axios.post(`${apiUrl}/api/rooms/${this.roomCode}`);\n            console.log('Room created:', createResponse.data);\n            this.$router.push(`/room/${this.roomCode}`);\n          } else {\n            throw error;\n          }\n        }\n      } catch (error) {\n        console.error('Room operation failed:', error);\n        alert('방 생성/입장에 실패했습니다. 다시 시도해주세요.');\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f5f5f5;\n}\n\n.container {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 400px;\n  text-align: center;\n}\n\nh1 {\n  margin-bottom: 2rem;\n  color: #333;\n}\n\n.room-input {\n  margin: 1rem 0;\n}\n\ninput {\n  width: 100%;\n  padding: 0.8rem;\n  margin: 0.5rem 0;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  text-align: center;\n  letter-spacing: 2px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #4CAF50;\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n}\n\n.primary-button {\n  width: 100%;\n  padding: 0.8rem;\n  margin: 0.5rem 0;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  background-color: #4CAF50;\n  color: white;\n  transition: background-color 0.2s;\n}\n\n.primary-button:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.primary-button:hover:not(:disabled) {\n  background-color: #45a049;\n}\n\n.hint {\n  color: #666;\n  font-size: 0.9rem;\n  margin-top: 0.5rem;\n}\n</style>\n"],"mappings":";AAiCA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,WAAA;MACAC,QAAA,EAAAC,OAAA,CAAAC,GAAA,CAAAC,aAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,MAAAC,SAAA,GAAAC,MAAA,CAAAC,QAAA,CAAAC,QAAA,CAAAC,KAAA;IACA,IAAAJ,SAAA;MACA,KAAAP,QAAA,GAAAO,SAAA;MACA,KAAAK,WAAA;QAAAC,MAAA;UAAAC,KAAA,OAAAd;QAAA;MAAA;MACA,KAAAe,UAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAAC,KAAA,CAAAC,SAAA,CAAAC,KAAA;EACA;EACAC,OAAA;IACAR,YAAAS,CAAA;MACA;MACA,KAAArB,QAAA,GAAAqB,CAAA,CAAAR,MAAA,CAAAC,KAAA,CAAAQ,OAAA;MACA,KAAArB,WAAA,aAAAsB,IAAA,MAAAvB,QAAA;IACA;IACA,MAAAe,WAAA;MACA,SAAAf,QAAA,CAAAwB,MAAA;QACA;QACA,KAAAxB,QAAA,GAAAyB,IAAA,CAAAC,KAAA,UAAAD,IAAA,CAAAE,MAAA,aAAAC,QAAA;QACA,KAAA3B,WAAA;MACA,iBAAAA,WAAA;QACA;MACA;MAEA,MAAA4B,MAAA,GAAA1B,OAAA,CAAAC,GAAA,CAAA0B,eAAA;MAEA;QACA;QACA;UACA,MAAAC,QAAA,SAAAlC,KAAA,CAAAmC,GAAA,IAAAH,MAAA,mBAAA7B,QAAA;UACAiC,OAAA,CAAAC,GAAA,iBAAAH,QAAA,CAAAhC,IAAA;UACA,KAAAoC,OAAA,CAAAC,IAAA,eAAApC,QAAA;QACA,SAAAqC,KAAA;UACA,IAAAA,KAAA,CAAAN,QAAA,IAAAM,KAAA,CAAAN,QAAA,CAAAO,MAAA;YACA;YACA,MAAAC,cAAA,SAAA1C,KAAA,CAAA2C,IAAA,IAAAX,MAAA,mBAAA7B,QAAA;YACAiC,OAAA,CAAAC,GAAA,kBAAAK,cAAA,CAAAxC,IAAA;YACA,KAAAoC,OAAA,CAAAC,IAAA,eAAApC,QAAA;UACA;YACA,MAAAqC,KAAA;UACA;QACA;MACA,SAAAA,KAAA;QACAJ,OAAA,CAAAI,KAAA,2BAAAA,KAAA;QACAI,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}