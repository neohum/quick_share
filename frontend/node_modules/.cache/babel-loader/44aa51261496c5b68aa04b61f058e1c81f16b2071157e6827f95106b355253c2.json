{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\n\n// axios 인스턴스 생성\nconst api = axios.create({\n  baseURL: `${process.env.VUE_APP_API_URL}/api`,\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      error: ''\n    };\n  },\n  computed: {\n    isValidCode() {\n      return /^\\d{6}$/.test(this.roomCode);\n    }\n  },\n  methods: {\n    validateInput() {\n      this.roomCode = this.roomCode.replace(/[^\\d]/g, '');\n    },\n    async handleRoom() {\n      this.error = '';\n      try {\n        if (!this.roomCode) {\n          // 새로운 방 생성\n          const response = await api.post('/rooms');\n          if (response.data && response.data.roomCode) {\n            this.saveRecentRoom(response.data.roomCode);\n            this.$router.push(`/room/${response.data.roomCode}`);\n          }\n        } else if (this.isValidCode) {\n          // 기존 방 참여\n          const response = await api.post(`/rooms/${this.roomCode}`);\n          if (response.data && response.data.roomCode) {\n            this.saveRecentRoom(this.roomCode);\n            this.$router.push(`/room/${this.roomCode}`);\n          }\n        }\n      } catch (error) {\n        if (error.response) {\n          this.showError(error.response.data.message || '서버 오류가 발생했습니다.');\n        } else if (error.request) {\n          this.showError('서버에 연결할 수 없습니다.');\n        } else {\n          this.showError('알 수 없는 오류가 발생했습니다.');\n        }\n        console.error('Error:', error);\n      }\n    },\n    showError(message) {\n      this.error = message;\n    },\n    saveRecentRoom(roomCode) {\n      const recentRooms = JSON.parse(localStorage.getItem('recentRooms') || '[]');\n      if (!recentRooms.includes(roomCode)) {\n        recentRooms.unshift(roomCode);\n        if (recentRooms.length > 5) recentRooms.pop();\n        localStorage.setItem('recentRooms', JSON.stringify(recentRooms));\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","VUE_APP_API_URL","timeout","headers","name","data","roomCode","error","computed","isValidCode","test","methods","validateInput","replace","handleRoom","response","post","saveRecentRoom","$router","push","showError","message","request","console","recentRooms","JSON","parse","localStorage","getItem","includes","unshift","length","pop","setItem","stringify"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"room-controls\">\n      <input\n        v-model=\"roomCode\"\n        placeholder=\"방 코드 입력 (6자리)\"\n        maxlength=\"6\"\n        pattern=\"\\d*\"\n        @input=\"validateInput\"\n      />\n      <button\n        @click=\"handleRoom\"\n        :disabled=\"roomCode && !isValidCode\"\n      >\n        {{ roomCode ? '방 참여하기' : '새로운 방 만들기' }}\n      </button>\n    </div>\n    <div v-if=\"error\" class=\"error-message\">\n      {{ error }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\n// axios 인스턴스 생성\nconst api = axios.create({\n  baseURL: `${process.env.VUE_APP_API_URL}/api`,\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      error: ''\n    }\n  },\n  computed: {\n    isValidCode() {\n      return /^\\d{6}$/.test(this.roomCode);\n    }\n  },\n  methods: {\n    validateInput() {\n      this.roomCode = this.roomCode.replace(/[^\\d]/g, '');\n    },\n    async handleRoom() {\n      this.error = '';\n\n      try {\n        if (!this.roomCode) {\n          // 새로운 방 생성\n          const response = await api.post('/rooms');\n          if (response.data && response.data.roomCode) {\n            this.saveRecentRoom(response.data.roomCode);\n            this.$router.push(`/room/${response.data.roomCode}`);\n          }\n        } else if (this.isValidCode) {\n          // 기존 방 참여\n          const response = await api.post(`/rooms/${this.roomCode}`);\n          if (response.data && response.data.roomCode) {\n            this.saveRecentRoom(this.roomCode);\n            this.$router.push(`/room/${this.roomCode}`);\n          }\n        }\n      } catch (error) {\n        if (error.response) {\n          this.showError(error.response.data.message || '서버 오류가 발생했습니다.');\n        } else if (error.request) {\n          this.showError('서버에 연결할 수 없습니다.');\n        } else {\n          this.showError('알 수 없는 오류가 발생했습니다.');\n        }\n        console.error('Error:', error);\n      }\n    },\n    showError(message) {\n      this.error = message;\n    },\n    saveRecentRoom(roomCode) {\n      const recentRooms = JSON.parse(localStorage.getItem('recentRooms') || '[]');\n      if (!recentRooms.includes(roomCode)) {\n        recentRooms.unshift(roomCode);\n        if (recentRooms.length > 5) recentRooms.pop();\n        localStorage.setItem('recentRooms', JSON.stringify(recentRooms));\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home {\n  padding: 20px;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.room-controls {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\ninput {\n  flex: 1;\n  padding: 8px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  padding: 8px 16px;\n  font-size: 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.error-message {\n  color: #ff0000;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";AAwBA,OAAAA,KAAA;;AAEA;AACA,MAAAC,GAAA,GAAAD,KAAA,CAAAE,MAAA;EACAC,OAAA,KAAAC,OAAA,CAAAC,GAAA,CAAAC,eAAA;EACAC,OAAA;EACAC,OAAA;IACA;EACA;AACA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACAC,YAAA;MACA,iBAAAC,IAAA,MAAAJ,QAAA;IACA;EACA;EACAK,OAAA;IACAC,cAAA;MACA,KAAAN,QAAA,QAAAA,QAAA,CAAAO,OAAA;IACA;IACA,MAAAC,WAAA;MACA,KAAAP,KAAA;MAEA;QACA,UAAAD,QAAA;UACA;UACA,MAAAS,QAAA,SAAAnB,GAAA,CAAAoB,IAAA;UACA,IAAAD,QAAA,CAAAV,IAAA,IAAAU,QAAA,CAAAV,IAAA,CAAAC,QAAA;YACA,KAAAW,cAAA,CAAAF,QAAA,CAAAV,IAAA,CAAAC,QAAA;YACA,KAAAY,OAAA,CAAAC,IAAA,UAAAJ,QAAA,CAAAV,IAAA,CAAAC,QAAA;UACA;QACA,gBAAAG,WAAA;UACA;UACA,MAAAM,QAAA,SAAAnB,GAAA,CAAAoB,IAAA,gBAAAV,QAAA;UACA,IAAAS,QAAA,CAAAV,IAAA,IAAAU,QAAA,CAAAV,IAAA,CAAAC,QAAA;YACA,KAAAW,cAAA,MAAAX,QAAA;YACA,KAAAY,OAAA,CAAAC,IAAA,eAAAb,QAAA;UACA;QACA;MACA,SAAAC,KAAA;QACA,IAAAA,KAAA,CAAAQ,QAAA;UACA,KAAAK,SAAA,CAAAb,KAAA,CAAAQ,QAAA,CAAAV,IAAA,CAAAgB,OAAA;QACA,WAAAd,KAAA,CAAAe,OAAA;UACA,KAAAF,SAAA;QACA;UACA,KAAAA,SAAA;QACA;QACAG,OAAA,CAAAhB,KAAA,WAAAA,KAAA;MACA;IACA;IACAa,UAAAC,OAAA;MACA,KAAAd,KAAA,GAAAc,OAAA;IACA;IACAJ,eAAAX,QAAA;MACA,MAAAkB,WAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,KAAAJ,WAAA,CAAAK,QAAA,CAAAvB,QAAA;QACAkB,WAAA,CAAAM,OAAA,CAAAxB,QAAA;QACA,IAAAkB,WAAA,CAAAO,MAAA,MAAAP,WAAA,CAAAQ,GAAA;QACAL,YAAA,CAAAM,OAAA,gBAAAR,IAAA,CAAAS,SAAA,CAAAV,WAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}