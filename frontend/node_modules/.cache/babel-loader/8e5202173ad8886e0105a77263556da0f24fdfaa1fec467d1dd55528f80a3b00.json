{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      isValidCode: false,\n      appTitle: process.env.VUE_APP_TITLE || '실시간 코드 공유'\n    };\n  },\n  created() {\n    // URL에서 방 코드 파라미터 확인\n    const pathMatch = window.location.pathname.match(/\\/room\\/(\\d{6})/);\n    if (pathMatch) {\n      this.roomCode = pathMatch[1];\n      this.handleInput({\n        target: {\n          value: this.roomCode\n        }\n      });\n      this.handleRoom();\n    }\n  },\n  methods: {\n    handleInput(e) {\n      // 숫자만 입력 가능\n      this.roomCode = e.target.value.replace(/[^0-9]/g, '');\n      this.isValidCode = /^\\d{6}$/.test(this.roomCode);\n    },\n    async handleRoom() {\n      if (!this.isValidCode) return;\n      try {\n        // 먼저 방이 존재하는지 확인\n        try {\n          await axios.get(`${process.env.VUE_APP_API_URL}/api/rooms/${this.roomCode}`);\n          // 방이 존재하면 입장\n          this.$router.push(`/room/${this.roomCode}`);\n        } catch (error) {\n          if (error.response && error.response.status === 404) {\n            // 방이 존재하지 않으면 새로 생성\n            await axios.post(`${process.env.VUE_APP_API_URL}/api/rooms/${this.roomCode}`);\n            this.$router.push(`/room/${this.roomCode}`);\n          } else {\n            throw error; // 다른 에러는 상위 catch로 전달\n          }\n        }\n      } catch (error) {\n        console.error('Room operation failed:', error);\n        alert('방 생성/입장에 실패했습니다. 다시 시도해주세요.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","roomCode","isValidCode","appTitle","process","env","VUE_APP_TITLE","created","pathMatch","window","location","pathname","match","handleInput","target","value","handleRoom","methods","e","replace","test","get","VUE_APP_API_URL","$router","push","error","response","status","post","console","alert"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"container\">\n      <h1>{{ appTitle }}</h1>\n      \n      <div class=\"room-input\">\n        <input \n          type=\"text\" \n          v-model=\"roomCode\"\n          @input=\"handleInput\"\n          placeholder=\"6자리 방 코드 입력\"\n          maxlength=\"6\"\n        />\n        <button \n          @click=\"handleRoom\" \n          :disabled=\"!isValidCode\"\n          class=\"primary-button\"\n        >\n          입장/생성하기\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      isValidCode: false,\n      appTitle: process.env.VUE_APP_TITLE || '실시간 코드 공유'\n    }\n  },\n  created() {\n    // URL에서 방 코드 파라미터 확인\n    const pathMatch = window.location.pathname.match(/\\/room\\/(\\d{6})/);\n    if (pathMatch) {\n      this.roomCode = pathMatch[1];\n      this.handleInput({ target: { value: this.roomCode }});\n      this.handleRoom();\n    }\n  },\n  methods: {\n    handleInput(e) {\n      // 숫자만 입력 가능\n      this.roomCode = e.target.value.replace(/[^0-9]/g, '');\n      this.isValidCode = /^\\d{6}$/.test(this.roomCode);\n    },\n    async handleRoom() {\n      if (!this.isValidCode) return;\n      \n      try {\n        // 먼저 방이 존재하는지 확인\n        try {\n          await axios.get(`${process.env.VUE_APP_API_URL}/api/rooms/${this.roomCode}`);\n          // 방이 존재하면 입장\n          this.$router.push(`/room/${this.roomCode}`);\n        } catch (error) {\n          if (error.response && error.response.status === 404) {\n            // 방이 존재하지 않으면 새로 생성\n            await axios.post(`${process.env.VUE_APP_API_URL}/api/rooms/${this.roomCode}`);\n            this.$router.push(`/room/${this.roomCode}`);\n          } else {\n            throw error; // 다른 에러는 상위 catch로 전달\n          }\n        }\n      } catch (error) {\n        console.error('Room operation failed:', error);\n        alert('방 생성/입장에 실패했습니다. 다시 시도해주세요.');\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f5f5f5;\n}\n\n.container {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 400px;\n  text-align: center;\n}\n\nh1 {\n  margin-bottom: 2rem;\n  color: #333;\n}\n\n.room-input {\n  margin: 1rem 0;\n}\n\ninput {\n  width: 100%;\n  padding: 0.8rem;\n  margin: 0.5rem 0;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  text-align: center;\n}\n\nbutton {\n  width: 100%;\n  padding: 0.8rem;\n  margin: 0.5rem 0;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\nbutton:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.primary-button {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.primary-button:hover:not(:disabled) {\n  background-color: #45a049;\n}\n</style>\n"],"mappings":";AA0BA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,WAAA;MACAC,QAAA,EAAAC,OAAA,CAAAC,GAAA,CAAAC,aAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,MAAAC,SAAA,GAAAC,MAAA,CAAAC,QAAA,CAAAC,QAAA,CAAAC,KAAA;IACA,IAAAJ,SAAA;MACA,KAAAP,QAAA,GAAAO,SAAA;MACA,KAAAK,WAAA;QAAAC,MAAA;UAAAC,KAAA,OAAAd;QAAA;MAAA;MACA,KAAAe,UAAA;IACA;EACA;EACAC,OAAA;IACAJ,YAAAK,CAAA;MACA;MACA,KAAAjB,QAAA,GAAAiB,CAAA,CAAAJ,MAAA,CAAAC,KAAA,CAAAI,OAAA;MACA,KAAAjB,WAAA,aAAAkB,IAAA,MAAAnB,QAAA;IACA;IACA,MAAAe,WAAA;MACA,UAAAd,WAAA;MAEA;QACA;QACA;UACA,MAAAJ,KAAA,CAAAuB,GAAA,IAAAjB,OAAA,CAAAC,GAAA,CAAAiB,eAAA,mBAAArB,QAAA;UACA;UACA,KAAAsB,OAAA,CAAAC,IAAA,eAAAvB,QAAA;QACA,SAAAwB,KAAA;UACA,IAAAA,KAAA,CAAAC,QAAA,IAAAD,KAAA,CAAAC,QAAA,CAAAC,MAAA;YACA;YACA,MAAA7B,KAAA,CAAA8B,IAAA,IAAAxB,OAAA,CAAAC,GAAA,CAAAiB,eAAA,mBAAArB,QAAA;YACA,KAAAsB,OAAA,CAAAC,IAAA,eAAAvB,QAAA;UACA;YACA,MAAAwB,KAAA;UACA;QACA;MACA,SAAAA,KAAA;QACAI,OAAA,CAAAJ,KAAA,2BAAAA,KAAA;QACAK,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}