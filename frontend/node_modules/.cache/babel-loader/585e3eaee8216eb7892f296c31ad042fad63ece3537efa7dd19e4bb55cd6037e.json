{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { nanoid } from 'nanoid';\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      isValidCode: false\n    };\n  },\n  methods: {\n    async createRoom() {\n      try {\n        // Generate 6-digit room code\n        const roomId = nanoid(6).replace(/[^0-9]/g, '').padEnd(6, '0').slice(0, 6);\n        const response = await axios.post('http://localhost:3000/api/rooms', {\n          roomId\n        });\n        this.$router.push(`/room/${response.data.roomId}`);\n      } catch (error) {\n        console.error('Failed to create room:', error);\n      }\n    },\n    handleInput(e) {\n      // Only allow numbers\n      this.roomCode = e.target.value.replace(/[^0-9]/g, '');\n      this.isValidCode = this.roomCode.length === 6;\n    },\n    async joinRoom() {\n      if (!this.isValidCode) return;\n      try {\n        const response = await axios.get(`http://localhost:3000/api/rooms/${this.roomCode}`);\n        if (response.data) {\n          this.$router.push(`/room/${this.roomCode}`);\n        }\n      } catch (error) {\n        alert('Room not found. Please check the room code.');\n        console.error('Failed to join room:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","nanoid","name","data","roomCode","isValidCode","methods","createRoom","roomId","replace","padEnd","slice","response","post","$router","push","error","console","handleInput","e","target","value","length","joinRoom","get","alert"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"container\">\n      <h1>Quick Share</h1>\n      <div class=\"actions\">\n        <button class=\"create-btn\" @click=\"createRoom\">Create New Room</button>\n        <div class=\"divider\">or</div>\n        <div class=\"join-form\">\n          <input \n            v-model=\"roomCode\"\n            placeholder=\"Enter 6-digit room code\"\n            maxlength=\"6\"\n            @input=\"handleInput\"\n            @keyup.enter=\"joinRoom\"\n          >\n          <button \n            class=\"join-btn\"\n            @click=\"joinRoom\"\n            :disabled=\"!isValidCode\"\n          >\n            Join Room\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { nanoid } from 'nanoid';\n\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      isValidCode: false\n    }\n  },\n  methods: {\n    async createRoom() {\n      try {\n        // Generate 6-digit room code\n        const roomId = nanoid(6).replace(/[^0-9]/g, '').padEnd(6, '0').slice(0, 6);\n        const response = await axios.post('http://localhost:3000/api/rooms', { roomId });\n        this.$router.push(`/room/${response.data.roomId}`);\n      } catch (error) {\n        console.error('Failed to create room:', error);\n      }\n    },\n    handleInput(e) {\n      // Only allow numbers\n      this.roomCode = e.target.value.replace(/[^0-9]/g, '');\n      this.isValidCode = this.roomCode.length === 6;\n    },\n    async joinRoom() {\n      if (!this.isValidCode) return;\n      \n      try {\n        const response = await axios.get(`http://localhost:3000/api/rooms/${this.roomCode}`);\n        if (response.data) {\n          this.$router.push(`/room/${this.roomCode}`);\n        }\n      } catch (error) {\n        alert('Room not found. Please check the room code.');\n        console.error('Failed to join room:', error);\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f5f5f5;\n}\n\n.container {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 400px;\n  text-align: center;\n}\n\nh1 {\n  color: #2c3e50;\n  margin-bottom: 2rem;\n  font-size: 2rem;\n}\n\n.actions {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.create-btn, .join-btn {\n  padding: 0.8rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.create-btn {\n  background-color: #42b983;\n  color: white;\n}\n\n.create-btn:hover {\n  background-color: #3aa876;\n}\n\n.join-btn {\n  background-color: #2c3e50;\n  color: white;\n}\n\n.join-btn:hover {\n  background-color: #34495e;\n}\n\n.join-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.divider {\n  color: #666;\n  margin: 1rem 0;\n  position: relative;\n}\n\n.divider::before,\n.divider::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  width: 45%;\n  height: 1px;\n  background-color: #ddd;\n}\n\n.divider::before {\n  left: 0;\n}\n\n.divider::after {\n  right: 0;\n}\n\n.join-form {\n  display: flex;\n  gap: 0.5rem;\n}\n\ninput {\n  flex: 1;\n  padding: 0.8rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #42b983;\n}\n</style>\n"],"mappings":";AA6BA,OAAAA,KAAA;AACA,SAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA;QACA;QACA,MAAAC,MAAA,GAAAP,MAAA,IAAAQ,OAAA,gBAAAC,MAAA,SAAAC,KAAA;QACA,MAAAC,QAAA,SAAAZ,KAAA,CAAAa,IAAA;UAAAL;QAAA;QACA,KAAAM,OAAA,CAAAC,IAAA,UAAAH,QAAA,CAAAT,IAAA,CAAAK,MAAA;MACA,SAAAQ,KAAA;QACAC,OAAA,CAAAD,KAAA,2BAAAA,KAAA;MACA;IACA;IACAE,YAAAC,CAAA;MACA;MACA,KAAAf,QAAA,GAAAe,CAAA,CAAAC,MAAA,CAAAC,KAAA,CAAAZ,OAAA;MACA,KAAAJ,WAAA,QAAAD,QAAA,CAAAkB,MAAA;IACA;IACA,MAAAC,SAAA;MACA,UAAAlB,WAAA;MAEA;QACA,MAAAO,QAAA,SAAAZ,KAAA,CAAAwB,GAAA,yCAAApB,QAAA;QACA,IAAAQ,QAAA,CAAAT,IAAA;UACA,KAAAW,OAAA,CAAAC,IAAA,eAAAX,QAAA;QACA;MACA,SAAAY,KAAA;QACAS,KAAA;QACAR,OAAA,CAAAD,KAAA,yBAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}