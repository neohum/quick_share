{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      error: '',\n      isCreatingRoom: false\n    };\n  },\n  computed: {\n    isValidCode() {\n      return /^\\d{6}$/.test(this.roomCode);\n    },\n    apiUrl() {\n      return process.env.VUE_APP_API_URL || 'http://localhost:3000';\n    }\n  },\n  methods: {\n    async handleRoom() {\n      this.error = '';\n      if (!this.roomCode) {\n        this.isCreatingRoom = true;\n        try {\n          const response = await axios.post(`${this.apiUrl}/api/rooms`);\n          if (response.data && response.data.roomCode) {\n            this.saveRecentRoom(response.data.roomCode);\n            this.$router.push(`/room/${response.data.roomCode}`);\n          }\n        } catch (error) {\n          this.showError('방 생성에 실패했습니다.');\n        }\n      } else if (this.isValidCode) {\n        try {\n          await axios.post(`${this.apiUrl}/api/rooms/${this.roomCode}`);\n          this.saveRecentRoom(this.roomCode);\n          this.$router.push(`/room/${this.roomCode}`);\n        } catch (error) {\n          let message = '알 수 없는 오류가 발생했습니다.';\n          if (error.response) {\n            message = error.response.data.message || '서버 오류가 발생했습니다.';\n          } else if (error.request) {\n            message = '서버에 연결할 수 없습니다.';\n          }\n          this.showError(message);\n        }\n      }\n    },\n    showError(message) {\n      this.error = message;\n    },\n    saveRecentRoom(roomCode) {\n      const recentRooms = JSON.parse(localStorage.getItem('recentRooms') || '[]');\n      if (!recentRooms.includes(roomCode)) {\n        recentRooms.unshift(roomCode);\n        if (recentRooms.length > 5) recentRooms.pop();\n        localStorage.setItem('recentRooms', JSON.stringify(recentRooms));\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","roomCode","error","isCreatingRoom","computed","isValidCode","test","apiUrl","process","env","VUE_APP_API_URL","methods","handleRoom","response","post","saveRecentRoom","$router","push","showError","message","request","recentRooms","JSON","parse","localStorage","getItem","includes","unshift","length","pop","setItem","stringify"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"room-controls\">\n      <input \n        v-model=\"roomCode\"\n        placeholder=\"방 코드 입력 (6자리)\"\n        maxlength=\"6\"\n        pattern=\"\\d*\"\n      />\n      <button \n        @click=\"handleRoom\"\n        :disabled=\"!isValidCode && !isCreatingRoom\"\n      >\n        {{ isCreatingRoom ? '새로운 방 만들기' : '방 참여하기' }}\n      </button>\n    </div>\n    <div v-if=\"error\" class=\"error-message\">\n      {{ error }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      roomCode: '',\n      error: '',\n      isCreatingRoom: false\n    }\n  },\n  computed: {\n    isValidCode() {\n      return /^\\d{6}$/.test(this.roomCode);\n    },\n    apiUrl() {\n      return process.env.VUE_APP_API_URL || 'http://localhost:3000';\n    }\n  },\n  methods: {\n    async handleRoom() {\n      this.error = '';\n      \n      if (!this.roomCode) {\n        this.isCreatingRoom = true;\n        try {\n          const response = await axios.post(`${this.apiUrl}/api/rooms`);\n          if (response.data && response.data.roomCode) {\n            this.saveRecentRoom(response.data.roomCode);\n            this.$router.push(`/room/${response.data.roomCode}`);\n          }\n        } catch (error) {\n          this.showError('방 생성에 실패했습니다.');\n        }\n      } else if (this.isValidCode) {\n        try {\n          await axios.post(`${this.apiUrl}/api/rooms/${this.roomCode}`);\n          this.saveRecentRoom(this.roomCode);\n          this.$router.push(`/room/${this.roomCode}`);\n        } catch (error) {\n          let message = '알 수 없는 오류가 발생했습니다.';\n          if (error.response) {\n            message = error.response.data.message || '서버 오류가 발생했습니다.';\n          } else if (error.request) {\n            message = '서버에 연결할 수 없습니다.';\n          }\n          this.showError(message);\n        }\n      }\n    },\n    showError(message) {\n      this.error = message;\n    },\n    saveRecentRoom(roomCode) {\n      const recentRooms = JSON.parse(localStorage.getItem('recentRooms') || '[]');\n      if (!recentRooms.includes(roomCode)) {\n        recentRooms.unshift(roomCode);\n        if (recentRooms.length > 5) recentRooms.pop();\n        localStorage.setItem('recentRooms', JSON.stringify(recentRooms));\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home {\n  padding: 20px;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.room-controls {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\ninput {\n  flex: 1;\n  padding: 8px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  padding: 8px 16px;\n  font-size: 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.error-message {\n  color: #ff0000;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";AAuBA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,KAAA;MACAC,cAAA;IACA;EACA;EACAC,QAAA;IACAC,YAAA;MACA,iBAAAC,IAAA,MAAAL,QAAA;IACA;IACAM,OAAA;MACA,OAAAC,OAAA,CAAAC,GAAA,CAAAC,eAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA,KAAAV,KAAA;MAEA,UAAAD,QAAA;QACA,KAAAE,cAAA;QACA;UACA,MAAAU,QAAA,SAAAf,KAAA,CAAAgB,IAAA,SAAAP,MAAA;UACA,IAAAM,QAAA,CAAAb,IAAA,IAAAa,QAAA,CAAAb,IAAA,CAAAC,QAAA;YACA,KAAAc,cAAA,CAAAF,QAAA,CAAAb,IAAA,CAAAC,QAAA;YACA,KAAAe,OAAA,CAAAC,IAAA,UAAAJ,QAAA,CAAAb,IAAA,CAAAC,QAAA;UACA;QACA,SAAAC,KAAA;UACA,KAAAgB,SAAA;QACA;MACA,gBAAAb,WAAA;QACA;UACA,MAAAP,KAAA,CAAAgB,IAAA,SAAAP,MAAA,mBAAAN,QAAA;UACA,KAAAc,cAAA,MAAAd,QAAA;UACA,KAAAe,OAAA,CAAAC,IAAA,eAAAhB,QAAA;QACA,SAAAC,KAAA;UACA,IAAAiB,OAAA;UACA,IAAAjB,KAAA,CAAAW,QAAA;YACAM,OAAA,GAAAjB,KAAA,CAAAW,QAAA,CAAAb,IAAA,CAAAmB,OAAA;UACA,WAAAjB,KAAA,CAAAkB,OAAA;YACAD,OAAA;UACA;UACA,KAAAD,SAAA,CAAAC,OAAA;QACA;MACA;IACA;IACAD,UAAAC,OAAA;MACA,KAAAjB,KAAA,GAAAiB,OAAA;IACA;IACAJ,eAAAd,QAAA;MACA,MAAAoB,WAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,KAAAJ,WAAA,CAAAK,QAAA,CAAAzB,QAAA;QACAoB,WAAA,CAAAM,OAAA,CAAA1B,QAAA;QACA,IAAAoB,WAAA,CAAAO,MAAA,MAAAP,WAAA,CAAAQ,GAAA;QACAL,YAAA,CAAAM,OAAA,gBAAAR,IAAA,CAAAS,SAAA,CAAAV,WAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}